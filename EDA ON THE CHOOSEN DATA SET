{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled35.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "ABSTRACT:"
      ],
      "metadata": {
        "id": "BUTR0MEhZi_8"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "According to the dataset considered, this situation deals with violation of laws\n",
        "and the features related to citations in court from different areas for different people. Most of the times\n",
        "when there is violation of law, the authorities settle it using charges. Few times there are cases where people are charged without commiting any violations or there are cases where people resist the charges\n",
        "for a inevitable reason. so in this work, for a citation, we are going to find if the hearing Status is issued or not\n",
        "meaning we are trying to understand how features of citations are affecting people who face any hearing status\n",
        "and people who don't have one. This helps us to know better about the current mindset of people and the mistakes\n",
        "made by them and in-turn provide a analysis for judistriction for easy flow of their work."
      ],
      "metadata": {
        "id": "TdgkDlzOZtY-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "IMPORTING LIBRARIES:"
      ],
      "metadata": {
        "id": "vUmhNW4ZZ15a"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# handling the tabular data\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# visualizing the data\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "# Data pre-processing \n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "# Data Cross Validation or Model Selection\n",
        "from sklearn.model_selection import train_test_split,learning_curve,GridSearchCV\n",
        "\n",
        "# Algorithms \n",
        "from sklearn.svm import SVC\n",
        "from sklearn.ensemble import IsolationForest\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "\n",
        "# Evaluation\n",
        "from sklearn.metrics import accuracy_score,classification_report,confusion_matrix,RocCurveDisplay,roc_curve,auc"
      ],
      "metadata": {
        "id": "JScMJvvpadRD"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data Acquisition:"
      ],
      "metadata": {
        "id": "SzZBb0ECamIo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_csv(\"/content/Environmental_Citations (4).csv\")\n",
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "PjsmCbkOcHOW",
        "outputId": "e4abd2e0-0751-45bb-cb6c-2a8a93e05971"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        CitationNo LienCode           ViolationDate                 DueDate  \\\n",
              "0          2313252        L  2009/01/26 05:00:00+00  2009/02/25 05:00:00+00   \n",
              "1          2708147        L  2009/09/09 04:00:00+00  2009/10/09 04:00:00+00   \n",
              "2          2708154        L  2009/09/09 04:00:00+00  2009/10/09 04:00:00+00   \n",
              "3          2708162        L  2009/09/09 04:00:00+00  2009/10/09 04:00:00+00   \n",
              "4          2810646        L  2005/07/06 04:00:00+00  2005/08/05 04:00:00+00   \n",
              "...            ...      ...                     ...                     ...   \n",
              "178430    55984637        L  2020/11/20 05:00:00+00  2020/12/24 05:00:00+00   \n",
              "178431    55984645        L  2020/11/17 05:00:00+00  2020/12/24 05:00:00+00   \n",
              "178432    55984652        L  2020/11/17 05:00:00+00  2020/12/24 05:00:00+00   \n",
              "178433    55984660        L  2020/11/17 05:00:00+00  2020/12/24 05:00:00+00   \n",
              "178434    55984678        L  2020/11/17 05:00:00+00  2020/12/24 05:00:00+00   \n",
              "\n",
              "                                                   Agency  FineAmount  \\\n",
              "0       BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "1       BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "2       BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "3       BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "4       BALTIMORE CITY POLICE DEPARTMENT              ...          60   \n",
              "...                                                   ...         ...   \n",
              "178430  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...          50   \n",
              "178431  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...          50   \n",
              "178432  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...          50   \n",
              "178433  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...          50   \n",
              "178434  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...          50   \n",
              "\n",
              "                                              Description  Balance  \\\n",
              "0       FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...    300.0   \n",
              "1       FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...    300.0   \n",
              "2       FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...    300.0   \n",
              "3       FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...    300.0   \n",
              "4       HIGH GRASS AND WEEDS                          ...    180.0   \n",
              "...                                                   ...      ...   \n",
              "178430  BULK TRASH                                    ...    150.0   \n",
              "178431  BULK TRASH                                    ...      0.0   \n",
              "178432  UNREGISTERED OR INOPERABLE VEHICLE            ...    150.0   \n",
              "178433  CONSTRUCTION AND MAINTENANCE OF STORAGE RECEPT...      0.0   \n",
              "178434  PLACEMENT FOR COLLECTION STORAGE ON NON-COLLEC...      0.0   \n",
              "\n",
              "                  LastPaidDate  LastPaidAmount  ... HearingStatus HearTime  \\\n",
              "0                          NaN             0.0  ...                          \n",
              "1                          NaN             0.0  ...                          \n",
              "2                          NaN             0.0  ...                          \n",
              "3                          NaN             0.0  ...                          \n",
              "4                          NaN             0.0  ...                          \n",
              "...                        ...             ...  ...           ...      ...   \n",
              "178430                     NaN             0.0  ...                          \n",
              "178431  2020/12/23 05:00:00+00            50.0  ...                          \n",
              "178432                     NaN             0.0  ...                          \n",
              "178433  2021/01/15 05:00:00+00            50.0  ...                          \n",
              "178434  2021/01/15 05:00:00+00            50.0  ...                          \n",
              "\n",
              "       TotalPaid TotalAbated TotalVoided                Neighborhood  \\\n",
              "0            0.0         0.0         0.0  Coppin Heights/Ash-Co-East   \n",
              "1            0.0         0.0         0.0                  Beechfield   \n",
              "2            0.0         0.0         0.0                  Beechfield   \n",
              "3            0.0         0.0         0.0                  Beechfield   \n",
              "4            0.0         0.0         0.0        Central Park Heights   \n",
              "...          ...         ...         ...                         ...   \n",
              "178430       0.0         0.0         0.0                   Irvington   \n",
              "178431      50.0         0.0         0.0                    Idlewood   \n",
              "178432       0.0         0.0         0.0               Belair-Edison   \n",
              "178433      50.0         0.0         0.0               Belair-Edison   \n",
              "178434       NaN         NaN         NaN                         NaN   \n",
              "\n",
              "       PoliceDistrict CouncilDistrict                    Location  ESRI_OID  \n",
              "0             Western             7.0  (39.30793364,-76.65344787)   70002.0  \n",
              "1        Southwestern             8.0  (39.27839051,-76.69754927)   70003.0  \n",
              "2        Southwestern             8.0  (39.27860883,-76.69752023)   70004.0  \n",
              "3        Southwestern             8.0  (39.27888220,-76.69748387)   70005.0  \n",
              "4        Northwestern             6.0  (39.34586982,-76.67082210)   70006.0  \n",
              "...               ...             ...                         ...       ...  \n",
              "178430   Southwestern             8.0  (39.28426411,-76.68378905)  178431.0  \n",
              "178431    Notheastern             4.0  (39.36907540,-76.59142093)  178432.0  \n",
              "178432    Notheastern            13.0  (39.31827879,-76.56990299)  178433.0  \n",
              "178433    Notheastern            13.0  (39.31817674,-76.56590297)  178434.0  \n",
              "178434            NaN             NaN                         NaN       NaN  \n",
              "\n",
              "[178435 rows x 30 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a1ced9d5-df6c-4eea-afa5-9a2ac752af41\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CitationNo</th>\n",
              "      <th>LienCode</th>\n",
              "      <th>ViolationDate</th>\n",
              "      <th>DueDate</th>\n",
              "      <th>Agency</th>\n",
              "      <th>FineAmount</th>\n",
              "      <th>Description</th>\n",
              "      <th>Balance</th>\n",
              "      <th>LastPaidDate</th>\n",
              "      <th>LastPaidAmount</th>\n",
              "      <th>...</th>\n",
              "      <th>HearingStatus</th>\n",
              "      <th>HearTime</th>\n",
              "      <th>TotalPaid</th>\n",
              "      <th>TotalAbated</th>\n",
              "      <th>TotalVoided</th>\n",
              "      <th>Neighborhood</th>\n",
              "      <th>PoliceDistrict</th>\n",
              "      <th>CouncilDistrict</th>\n",
              "      <th>Location</th>\n",
              "      <th>ESRI_OID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2313252</td>\n",
              "      <td>L</td>\n",
              "      <td>2009/01/26 05:00:00+00</td>\n",
              "      <td>2009/02/25 05:00:00+00</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...</td>\n",
              "      <td>300.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Coppin Heights/Ash-Co-East</td>\n",
              "      <td>Western</td>\n",
              "      <td>7.0</td>\n",
              "      <td>(39.30793364,-76.65344787)</td>\n",
              "      <td>70002.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2708147</td>\n",
              "      <td>L</td>\n",
              "      <td>2009/09/09 04:00:00+00</td>\n",
              "      <td>2009/10/09 04:00:00+00</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...</td>\n",
              "      <td>300.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Beechfield</td>\n",
              "      <td>Southwestern</td>\n",
              "      <td>8.0</td>\n",
              "      <td>(39.27839051,-76.69754927)</td>\n",
              "      <td>70003.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2708154</td>\n",
              "      <td>L</td>\n",
              "      <td>2009/09/09 04:00:00+00</td>\n",
              "      <td>2009/10/09 04:00:00+00</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...</td>\n",
              "      <td>300.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Beechfield</td>\n",
              "      <td>Southwestern</td>\n",
              "      <td>8.0</td>\n",
              "      <td>(39.27860883,-76.69752023)</td>\n",
              "      <td>70004.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2708162</td>\n",
              "      <td>L</td>\n",
              "      <td>2009/09/09 04:00:00+00</td>\n",
              "      <td>2009/10/09 04:00:00+00</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...</td>\n",
              "      <td>300.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Beechfield</td>\n",
              "      <td>Southwestern</td>\n",
              "      <td>8.0</td>\n",
              "      <td>(39.27888220,-76.69748387)</td>\n",
              "      <td>70005.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2810646</td>\n",
              "      <td>L</td>\n",
              "      <td>2005/07/06 04:00:00+00</td>\n",
              "      <td>2005/08/05 04:00:00+00</td>\n",
              "      <td>BALTIMORE CITY POLICE DEPARTMENT              ...</td>\n",
              "      <td>60</td>\n",
              "      <td>HIGH GRASS AND WEEDS                          ...</td>\n",
              "      <td>180.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Central Park Heights</td>\n",
              "      <td>Northwestern</td>\n",
              "      <td>6.0</td>\n",
              "      <td>(39.34586982,-76.67082210)</td>\n",
              "      <td>70006.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>178430</th>\n",
              "      <td>55984637</td>\n",
              "      <td>L</td>\n",
              "      <td>2020/11/20 05:00:00+00</td>\n",
              "      <td>2020/12/24 05:00:00+00</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>50</td>\n",
              "      <td>BULK TRASH                                    ...</td>\n",
              "      <td>150.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Irvington</td>\n",
              "      <td>Southwestern</td>\n",
              "      <td>8.0</td>\n",
              "      <td>(39.28426411,-76.68378905)</td>\n",
              "      <td>178431.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>178431</th>\n",
              "      <td>55984645</td>\n",
              "      <td>L</td>\n",
              "      <td>2020/11/17 05:00:00+00</td>\n",
              "      <td>2020/12/24 05:00:00+00</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>50</td>\n",
              "      <td>BULK TRASH                                    ...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2020/12/23 05:00:00+00</td>\n",
              "      <td>50.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Idlewood</td>\n",
              "      <td>Notheastern</td>\n",
              "      <td>4.0</td>\n",
              "      <td>(39.36907540,-76.59142093)</td>\n",
              "      <td>178432.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>178432</th>\n",
              "      <td>55984652</td>\n",
              "      <td>L</td>\n",
              "      <td>2020/11/17 05:00:00+00</td>\n",
              "      <td>2020/12/24 05:00:00+00</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>50</td>\n",
              "      <td>UNREGISTERED OR INOPERABLE VEHICLE            ...</td>\n",
              "      <td>150.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Belair-Edison</td>\n",
              "      <td>Notheastern</td>\n",
              "      <td>13.0</td>\n",
              "      <td>(39.31827879,-76.56990299)</td>\n",
              "      <td>178433.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>178433</th>\n",
              "      <td>55984660</td>\n",
              "      <td>L</td>\n",
              "      <td>2020/11/17 05:00:00+00</td>\n",
              "      <td>2020/12/24 05:00:00+00</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>50</td>\n",
              "      <td>CONSTRUCTION AND MAINTENANCE OF STORAGE RECEPT...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2021/01/15 05:00:00+00</td>\n",
              "      <td>50.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Belair-Edison</td>\n",
              "      <td>Notheastern</td>\n",
              "      <td>13.0</td>\n",
              "      <td>(39.31817674,-76.56590297)</td>\n",
              "      <td>178434.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>178434</th>\n",
              "      <td>55984678</td>\n",
              "      <td>L</td>\n",
              "      <td>2020/11/17 05:00:00+00</td>\n",
              "      <td>2020/12/24 05:00:00+00</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>50</td>\n",
              "      <td>PLACEMENT FOR COLLECTION STORAGE ON NON-COLLEC...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2021/01/15 05:00:00+00</td>\n",
              "      <td>50.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>178435 rows × 30 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1ced9d5-df6c-4eea-afa5-9a2ac752af41')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a1ced9d5-df6c-4eea-afa5-9a2ac752af41 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a1ced9d5-df6c-4eea-afa5-9a2ac752af41');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "As data is very large, we are considering only a sample which we can handle"
      ],
      "metadata": {
        "id": "8u_EuQXHdpuD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data = data.iloc[:50000,:]\n",
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Acm7HvW9dq-f",
        "outputId": "9358d545-b11e-4eaa-aa5d-a7d2546ce070"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       CitationNo LienCode           ViolationDate                 DueDate  \\\n",
              "0         2313252        L  2009/01/26 05:00:00+00  2009/02/25 05:00:00+00   \n",
              "1         2708147        L  2009/09/09 04:00:00+00  2009/10/09 04:00:00+00   \n",
              "2         2708154        L  2009/09/09 04:00:00+00  2009/10/09 04:00:00+00   \n",
              "3         2708162        L  2009/09/09 04:00:00+00  2009/10/09 04:00:00+00   \n",
              "4         2810646        L  2005/07/06 04:00:00+00  2005/08/05 04:00:00+00   \n",
              "...           ...      ...                     ...                     ...   \n",
              "49995    53689436        L  2015/01/22 05:00:00+00  2015/02/21 05:00:00+00   \n",
              "49996    53689527        L  2015/01/22 05:00:00+00  2015/02/21 05:00:00+00   \n",
              "49997    53689634        L  2015/01/22 05:00:00+00  2015/02/21 05:00:00+00   \n",
              "49998    53689675        L  2015/01/23 05:00:00+00  2015/02/22 05:00:00+00   \n",
              "49999    53689683        L  2015/01/23 05:00:00+00  2015/02/22 05:00:00+00   \n",
              "\n",
              "                                                  Agency  FineAmount  \\\n",
              "0      BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "1      BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "2      BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "3      BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "4      BALTIMORE CITY POLICE DEPARTMENT              ...          60   \n",
              "...                                                  ...         ...   \n",
              "49995  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...         100   \n",
              "49996  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...         100   \n",
              "49997  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...         100   \n",
              "49998  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...         100   \n",
              "49999  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...         100   \n",
              "\n",
              "                                             Description  Balance  \\\n",
              "0      FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...    300.0   \n",
              "1      FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...    300.0   \n",
              "2      FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...    300.0   \n",
              "3      FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...    300.0   \n",
              "4      HIGH GRASS AND WEEDS                          ...    180.0   \n",
              "...                                                  ...      ...   \n",
              "49995  FAILURE TO FILE A COMPLETED ANNUAL REGISTRATIO...      0.0   \n",
              "49996  FAILURE TO FILE A COMPLETED ANNUAL REGISTRATIO...      0.0   \n",
              "49997  HIGH GRASS AND WEEDS                          ...      0.0   \n",
              "49998  UNREGISTERED OR INOPERABLE VEHICLE            ...    115.0   \n",
              "49999  EXTERIOR SANITARY MAINTENANCE - GENERAL       ...     50.0   \n",
              "\n",
              "                 LastPaidDate  LastPaidAmount  ... HearingStatus HearTime  \\\n",
              "0                         NaN             0.0  ...                          \n",
              "1                         NaN             0.0  ...                          \n",
              "2                         NaN             0.0  ...                          \n",
              "3                         NaN             0.0  ...                          \n",
              "4                         NaN             0.0  ...                          \n",
              "...                       ...             ...  ...           ...      ...   \n",
              "49995  2022/04/13 04:00:00+00           300.0  ...                          \n",
              "49996  2018/05/14 04:00:00+00           300.0  ...                          \n",
              "49997  2018/05/14 04:00:00+00           300.0  ...                          \n",
              "49998                     NaN             0.0  ...            GU    1100A   \n",
              "49999                     NaN             0.0  ...            GR    1100A   \n",
              "\n",
              "      TotalPaid TotalAbated TotalVoided                Neighborhood  \\\n",
              "0           0.0         0.0         0.0  Coppin Heights/Ash-Co-East   \n",
              "1           0.0         0.0         0.0                  Beechfield   \n",
              "2           0.0         0.0         0.0                  Beechfield   \n",
              "3           0.0         0.0         0.0                  Beechfield   \n",
              "4           0.0         0.0         0.0        Central Park Heights   \n",
              "...         ...         ...         ...                         ...   \n",
              "49995     300.0         0.0         0.0                     Harwood   \n",
              "49996     300.0         0.0         0.0                  Penn North   \n",
              "49997     300.0         0.0         0.0               Belair-Edison   \n",
              "49998       0.0         0.0         0.0               Belair-Edison   \n",
              "49999       0.0        50.0         0.0               Belair-Edison   \n",
              "\n",
              "      PoliceDistrict CouncilDistrict                    Location ESRI_OID  \n",
              "0            Western             7.0  (39.30793364,-76.65344787)        3  \n",
              "1       Southwestern             8.0  (39.27839051,-76.69754927)        1  \n",
              "2       Southwestern             8.0  (39.27860883,-76.69752023)        2  \n",
              "3       Southwestern             8.0  (39.27888220,-76.69748387)        4  \n",
              "4       Northwestern             6.0  (39.34586982,-76.67082210)        5  \n",
              "...              ...             ...                         ...      ...  \n",
              "49995       Northern            12.0  (39.32194481,-76.61133401)    49996  \n",
              "49996        Western             7.0  (39.31074910,-76.63804690)    49997  \n",
              "49997    Notheastern            13.0  (39.32107415,-76.57389826)    49998  \n",
              "49998    Notheastern            13.0  (39.32117274,-76.57378310)    49999  \n",
              "49999    Notheastern            13.0  (39.32117274,-76.57378310)    50000  \n",
              "\n",
              "[50000 rows x 30 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0805dfca-4431-46ae-822c-fc94ee8978a8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CitationNo</th>\n",
              "      <th>LienCode</th>\n",
              "      <th>ViolationDate</th>\n",
              "      <th>DueDate</th>\n",
              "      <th>Agency</th>\n",
              "      <th>FineAmount</th>\n",
              "      <th>Description</th>\n",
              "      <th>Balance</th>\n",
              "      <th>LastPaidDate</th>\n",
              "      <th>LastPaidAmount</th>\n",
              "      <th>...</th>\n",
              "      <th>HearingStatus</th>\n",
              "      <th>HearTime</th>\n",
              "      <th>TotalPaid</th>\n",
              "      <th>TotalAbated</th>\n",
              "      <th>TotalVoided</th>\n",
              "      <th>Neighborhood</th>\n",
              "      <th>PoliceDistrict</th>\n",
              "      <th>CouncilDistrict</th>\n",
              "      <th>Location</th>\n",
              "      <th>ESRI_OID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2313252</td>\n",
              "      <td>L</td>\n",
              "      <td>2009/01/26 05:00:00+00</td>\n",
              "      <td>2009/02/25 05:00:00+00</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...</td>\n",
              "      <td>300.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Coppin Heights/Ash-Co-East</td>\n",
              "      <td>Western</td>\n",
              "      <td>7.0</td>\n",
              "      <td>(39.30793364,-76.65344787)</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2708147</td>\n",
              "      <td>L</td>\n",
              "      <td>2009/09/09 04:00:00+00</td>\n",
              "      <td>2009/10/09 04:00:00+00</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...</td>\n",
              "      <td>300.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Beechfield</td>\n",
              "      <td>Southwestern</td>\n",
              "      <td>8.0</td>\n",
              "      <td>(39.27839051,-76.69754927)</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2708154</td>\n",
              "      <td>L</td>\n",
              "      <td>2009/09/09 04:00:00+00</td>\n",
              "      <td>2009/10/09 04:00:00+00</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...</td>\n",
              "      <td>300.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Beechfield</td>\n",
              "      <td>Southwestern</td>\n",
              "      <td>8.0</td>\n",
              "      <td>(39.27860883,-76.69752023)</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2708162</td>\n",
              "      <td>L</td>\n",
              "      <td>2009/09/09 04:00:00+00</td>\n",
              "      <td>2009/10/09 04:00:00+00</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>FAILURE TO REMOVE OR ABATE ALL NUISANCES/FAILU...</td>\n",
              "      <td>300.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Beechfield</td>\n",
              "      <td>Southwestern</td>\n",
              "      <td>8.0</td>\n",
              "      <td>(39.27888220,-76.69748387)</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2810646</td>\n",
              "      <td>L</td>\n",
              "      <td>2005/07/06 04:00:00+00</td>\n",
              "      <td>2005/08/05 04:00:00+00</td>\n",
              "      <td>BALTIMORE CITY POLICE DEPARTMENT              ...</td>\n",
              "      <td>60</td>\n",
              "      <td>HIGH GRASS AND WEEDS                          ...</td>\n",
              "      <td>180.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Central Park Heights</td>\n",
              "      <td>Northwestern</td>\n",
              "      <td>6.0</td>\n",
              "      <td>(39.34586982,-76.67082210)</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49995</th>\n",
              "      <td>53689436</td>\n",
              "      <td>L</td>\n",
              "      <td>2015/01/22 05:00:00+00</td>\n",
              "      <td>2015/02/21 05:00:00+00</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>100</td>\n",
              "      <td>FAILURE TO FILE A COMPLETED ANNUAL REGISTRATIO...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2022/04/13 04:00:00+00</td>\n",
              "      <td>300.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Harwood</td>\n",
              "      <td>Northern</td>\n",
              "      <td>12.0</td>\n",
              "      <td>(39.32194481,-76.61133401)</td>\n",
              "      <td>49996</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49996</th>\n",
              "      <td>53689527</td>\n",
              "      <td>L</td>\n",
              "      <td>2015/01/22 05:00:00+00</td>\n",
              "      <td>2015/02/21 05:00:00+00</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>100</td>\n",
              "      <td>FAILURE TO FILE A COMPLETED ANNUAL REGISTRATIO...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2018/05/14 04:00:00+00</td>\n",
              "      <td>300.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Penn North</td>\n",
              "      <td>Western</td>\n",
              "      <td>7.0</td>\n",
              "      <td>(39.31074910,-76.63804690)</td>\n",
              "      <td>49997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49997</th>\n",
              "      <td>53689634</td>\n",
              "      <td>L</td>\n",
              "      <td>2015/01/22 05:00:00+00</td>\n",
              "      <td>2015/02/21 05:00:00+00</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>100</td>\n",
              "      <td>HIGH GRASS AND WEEDS                          ...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2018/05/14 04:00:00+00</td>\n",
              "      <td>300.0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Belair-Edison</td>\n",
              "      <td>Notheastern</td>\n",
              "      <td>13.0</td>\n",
              "      <td>(39.32107415,-76.57389826)</td>\n",
              "      <td>49998</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49998</th>\n",
              "      <td>53689675</td>\n",
              "      <td>L</td>\n",
              "      <td>2015/01/23 05:00:00+00</td>\n",
              "      <td>2015/02/22 05:00:00+00</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>100</td>\n",
              "      <td>UNREGISTERED OR INOPERABLE VEHICLE            ...</td>\n",
              "      <td>115.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>GU</td>\n",
              "      <td>1100A</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Belair-Edison</td>\n",
              "      <td>Notheastern</td>\n",
              "      <td>13.0</td>\n",
              "      <td>(39.32117274,-76.57378310)</td>\n",
              "      <td>49999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49999</th>\n",
              "      <td>53689683</td>\n",
              "      <td>L</td>\n",
              "      <td>2015/01/23 05:00:00+00</td>\n",
              "      <td>2015/02/22 05:00:00+00</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>100</td>\n",
              "      <td>EXTERIOR SANITARY MAINTENANCE - GENERAL       ...</td>\n",
              "      <td>50.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>GR</td>\n",
              "      <td>1100A</td>\n",
              "      <td>0.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Belair-Edison</td>\n",
              "      <td>Notheastern</td>\n",
              "      <td>13.0</td>\n",
              "      <td>(39.32117274,-76.57378310)</td>\n",
              "      <td>50000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50000 rows × 30 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0805dfca-4431-46ae-822c-fc94ee8978a8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0805dfca-4431-46ae-822c-fc94ee8978a8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0805dfca-4431-46ae-822c-fc94ee8978a8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data Analysis"
      ],
      "metadata": {
        "id": "a8wSKBzPd2eP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-FDwmudAd3PN",
        "outputId": "e5c90395-7f39-49c0-f40e-8850153ce2d0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 50000 entries, 0 to 49999\n",
            "Data columns (total 30 columns):\n",
            " #   Column                      Non-Null Count  Dtype  \n",
            "---  ------                      --------------  -----  \n",
            " 0   CitationNo                  50000 non-null  int64  \n",
            " 1   LienCode                    50000 non-null  object \n",
            " 2   ViolationDate               50000 non-null  object \n",
            " 3   DueDate                     50000 non-null  object \n",
            " 4   Agency                      50000 non-null  object \n",
            " 5   FineAmount                  50000 non-null  int64  \n",
            " 6   Description                 50000 non-null  object \n",
            " 7   Balance                     50000 non-null  float64\n",
            " 8   LastPaidDate                7725 non-null   object \n",
            " 9   LastPaidAmount              50000 non-null  float64\n",
            " 10  HearingDate                 4538 non-null   object \n",
            " 11  HearingRequestReceivedDate  3509 non-null   object \n",
            " 12  CitationStatus              50000 non-null  object \n",
            " 13  ViolationCodeArticle        50000 non-null  object \n",
            " 14  ViolationCodeSection        50000 non-null  object \n",
            " 15  ViolationLocation           50000 non-null  object \n",
            " 16  Block                       50000 non-null  object \n",
            " 17  Lot                         50000 non-null  object \n",
            " 18  OfficerID                   50000 non-null  object \n",
            " 19  OfficerPresenceRequested    50000 non-null  object \n",
            " 20  HearingStatus               50000 non-null  object \n",
            " 21  HearTime                    50000 non-null  object \n",
            " 22  TotalPaid                   50000 non-null  float64\n",
            " 23  TotalAbated                 50000 non-null  float64\n",
            " 24  TotalVoided                 50000 non-null  float64\n",
            " 25  Neighborhood                49787 non-null  object \n",
            " 26  PoliceDistrict              49787 non-null  object \n",
            " 27  CouncilDistrict             49788 non-null  float64\n",
            " 28  Location                    49788 non-null  object \n",
            " 29  ESRI_OID                    50000 non-null  int64  \n",
            "dtypes: float64(6), int64(3), object(21)\n",
            "memory usage: 11.4+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.ViolationCodeSection.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RpODeYR_eCNJ",
        "outputId": "15cef8be-b791-418b-e638-01e239f39dc0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "305.2.2       5411\n",
              "4-5A.2        3991\n",
              "306.2         3114\n",
              "306.1         2959\n",
              "306.3B        2905\n",
              "              ... \n",
              "62.              1\n",
              "62..             1\n",
              "307.2.2          1\n",
              "3409.3.3         1\n",
              "38-19            1\n",
              "Name: ViolationCodeSection, Length: 195, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.Block.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ElO0wJlAeK4t",
        "outputId": "34ebe69f-0618-45f5-992c-5beb03127935"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         7366\n",
              "7492C     222\n",
              "5210E     152\n",
              "3301      133\n",
              "0271      110\n",
              "         ... \n",
              "5570E       1\n",
              "4218H       1\n",
              "8252        1\n",
              "4429D       1\n",
              "5477        1\n",
              "Name: Block, Length: 3405, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.Lot.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PH7NpKVseRFm",
        "outputId": "185cbea5-e751-48b9-dc4d-08e988f5c6dc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        7368\n",
              "001     1242\n",
              "011      845\n",
              "006      810\n",
              "008      800\n",
              "        ... \n",
              "028D       1\n",
              "584        1\n",
              "594        1\n",
              "054D       1\n",
              "708        1\n",
              "Name: Lot, Length: 818, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.Neighborhood.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l63M4n0keYw9",
        "outputId": "17314f99-73c0-435a-f957-d0d7b8f84c41"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Broadway East                      8797\n",
              "Carrollton Ridge                   1629\n",
              "Central Park Heights               1423\n",
              "Belair-Edison                      1311\n",
              "Coldstream Homestead Montebello    1210\n",
              "                                   ... \n",
              "Rosebank                              1\n",
              "Tuscany-Canterbury                    1\n",
              "Wyndhurst                             1\n",
              "Dunbar-Broadway                       1\n",
              "Wakefield                             1\n",
              "Name: Neighborhood, Length: 249, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "removing the columns which are insignificant\n",
        "1. columns with large number of unique values\n",
        "2. we are not performing time series analysis. so, removing the columns with time related data"
      ],
      "metadata": {
        "id": "znMOjCOnekVY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data.drop(columns=[\"CitationNo\",\"ViolationDate\",\"DueDate\",\n",
        "                   \"ESRI_OID\",\"Location\",\"OfficerID\",\"Description\",\n",
        "                   \"LastPaidDate\",\"HearingDate\",\"HearingRequestReceivedDate\",\n",
        "                   \"ViolationLocation\",\"ViolationCodeSection\",\"Block\",\"Lot\",\n",
        "                   \"HearTime\",\"Neighborhood\",\"Location\"],inplace=True)\n",
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "dMSZVcEleqnd",
        "outputId": "6e4e23b8-8b71-4357-84e7-9c1d67ef4377"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py:4913: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  errors=errors,\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      LienCode                                             Agency  FineAmount  \\\n",
              "0            L  BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "1            L  BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "2            L  BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "3            L  BALTIMORE CITY HEALTH DEPARTMENT              ...         100   \n",
              "4            L  BALTIMORE CITY POLICE DEPARTMENT              ...          60   \n",
              "...        ...                                                ...         ...   \n",
              "49995        L  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...         100   \n",
              "49996        L  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...         100   \n",
              "49997        L  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...         100   \n",
              "49998        L  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...         100   \n",
              "49999        L  DEPARTMENT OF HOUSING & COMMUNITY DEVELOPMENT ...         100   \n",
              "\n",
              "       Balance  LastPaidAmount CitationStatus ViolationCodeArticle  \\\n",
              "0        300.0             0.0       O                    HE         \n",
              "1        300.0             0.0       O                    HE         \n",
              "2        300.0             0.0       O                    HE         \n",
              "3        300.0             0.0       O                    HE         \n",
              "4        180.0             0.0       O                    03         \n",
              "...        ...             ...            ...                  ...   \n",
              "49995      0.0           300.0       P                    13         \n",
              "49996      0.0           300.0       P                    13         \n",
              "49997      0.0           300.0       P                    PM         \n",
              "49998    115.0             0.0       O                    PM         \n",
              "49999     50.0             0.0       O                    PM         \n",
              "\n",
              "      OfficerPresenceRequested HearingStatus  TotalPaid  TotalAbated  \\\n",
              "0                                                   0.0          0.0   \n",
              "1                                                   0.0          0.0   \n",
              "2                                                   0.0          0.0   \n",
              "3                                                   0.0          0.0   \n",
              "4                                                   0.0          0.0   \n",
              "...                        ...           ...        ...          ...   \n",
              "49995                                             300.0          0.0   \n",
              "49996                                             300.0          0.0   \n",
              "49997                                             300.0          0.0   \n",
              "49998                        Y            GU        0.0          0.0   \n",
              "49999                        Y            GR        0.0         50.0   \n",
              "\n",
              "       TotalVoided PoliceDistrict  CouncilDistrict  \n",
              "0              0.0        Western              7.0  \n",
              "1              0.0   Southwestern              8.0  \n",
              "2              0.0   Southwestern              8.0  \n",
              "3              0.0   Southwestern              8.0  \n",
              "4              0.0   Northwestern              6.0  \n",
              "...            ...            ...              ...  \n",
              "49995          0.0       Northern             12.0  \n",
              "49996          0.0        Western              7.0  \n",
              "49997          0.0    Notheastern             13.0  \n",
              "49998          0.0    Notheastern             13.0  \n",
              "49999          0.0    Notheastern             13.0  \n",
              "\n",
              "[50000 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8840eaae-3304-41fb-8163-db9afd65c0d5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>LienCode</th>\n",
              "      <th>Agency</th>\n",
              "      <th>FineAmount</th>\n",
              "      <th>Balance</th>\n",
              "      <th>LastPaidAmount</th>\n",
              "      <th>CitationStatus</th>\n",
              "      <th>ViolationCodeArticle</th>\n",
              "      <th>OfficerPresenceRequested</th>\n",
              "      <th>HearingStatus</th>\n",
              "      <th>TotalPaid</th>\n",
              "      <th>TotalAbated</th>\n",
              "      <th>TotalVoided</th>\n",
              "      <th>PoliceDistrict</th>\n",
              "      <th>CouncilDistrict</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>L</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>O</td>\n",
              "      <td>HE</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Western</td>\n",
              "      <td>7.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>L</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>O</td>\n",
              "      <td>HE</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Southwestern</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>L</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>O</td>\n",
              "      <td>HE</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Southwestern</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>L</td>\n",
              "      <td>BALTIMORE CITY HEALTH DEPARTMENT              ...</td>\n",
              "      <td>100</td>\n",
              "      <td>300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>O</td>\n",
              "      <td>HE</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Southwestern</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>L</td>\n",
              "      <td>BALTIMORE CITY POLICE DEPARTMENT              ...</td>\n",
              "      <td>60</td>\n",
              "      <td>180.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>O</td>\n",
              "      <td>03</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Northwestern</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49995</th>\n",
              "      <td>L</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>300.0</td>\n",
              "      <td>P</td>\n",
              "      <td>13</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Northern</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49996</th>\n",
              "      <td>L</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>300.0</td>\n",
              "      <td>P</td>\n",
              "      <td>13</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Western</td>\n",
              "      <td>7.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49997</th>\n",
              "      <td>L</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>300.0</td>\n",
              "      <td>P</td>\n",
              "      <td>PM</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Notheastern</td>\n",
              "      <td>13.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49998</th>\n",
              "      <td>L</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>100</td>\n",
              "      <td>115.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>O</td>\n",
              "      <td>PM</td>\n",
              "      <td>Y</td>\n",
              "      <td>GU</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Notheastern</td>\n",
              "      <td>13.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49999</th>\n",
              "      <td>L</td>\n",
              "      <td>DEPARTMENT OF HOUSING &amp; COMMUNITY DEVELOPMENT ...</td>\n",
              "      <td>100</td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>O</td>\n",
              "      <td>PM</td>\n",
              "      <td>Y</td>\n",
              "      <td>GR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Notheastern</td>\n",
              "      <td>13.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50000 rows × 14 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8840eaae-3304-41fb-8163-db9afd65c0d5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8840eaae-3304-41fb-8163-db9afd65c0d5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8840eaae-3304-41fb-8163-db9afd65c0d5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Exploratory Data Analysis"
      ],
      "metadata": {
        "id": "N5TkprtIexg3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "understanding all the different categorical column's with data distributions"
      ],
      "metadata": {
        "id": "HZNGXOFdez6d"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for i in data.columns:\n",
        "    if str(data[i].dtype) == \"object\":\n",
        "      print(i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "brPVO4WaPumL",
        "outputId": "fdf37d95-1cca-4d5c-dcd4-62392c38e5be"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "LienCode\n",
            "Agency\n",
            "CitationStatus\n",
            "ViolationCodeArticle\n",
            "OfficerPresenceRequested\n",
            "HearingStatus\n",
            "PoliceDistrict\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['LienCode'].value_counts().plot(kind='bar',xlabel='LienCode',ylabel='Count',title='Distribition of LienCode')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "E8EqANnZQFY6",
        "outputId": "cda3d8ab-287b-402e-c1b8-4ce05fa94cfa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fcdd3a9e9d0>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This plot shows the information of distribution of lien code from the figure we can observe that lien code type n has the highest number of records when compared to the other type."
      ],
      "metadata": {
        "id": "IkyVRaP04nZd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['Agency'].value_counts().plot(kind='bar',xlabel='Agency',ylabel='Count',title='Distribition of Agency')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 606
        },
        "id": "H-GEfN_zQL02",
        "outputId": "2194cfa7-e2db-45f8-ec18-1c8d4b888042"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fcdd3a8b790>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZEAAAI7CAYAAAAtTqZCAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdd7wkVZ3+8c/DEFUQlBGRrGBAVNBBMOxvFRQQA+gKwqqgouiKrpgxrWvAsMbFVRRWBHQRMQICIosYUNKgSDIwS0aUJIKgIPD8/jjnzvQ0fW9f2uk+Nczzfr36NdWnuru+Xbemv1V1kmwTERExiuVaBxAREUuvJJGIiBhZkkhERIwsSSQiIkaWJBIRESNLEomIiJElicRSRdLnJb1nCX3W+pL+LGlOff5DSa+czWunec2fJT10ScQ2W5JWkXSspD9J+voktx0BSSLRIZIulfQXSTdLulHSzyS9RtLC49T2a2x/YJaf9YyZXmP7ctv3s33nsM/rf+2ghFPXXzzss5awFwJrAQ+0vct0L5L0MkmW9KLJhRbLgiSR6Jrn2l4V2AD4CPB24ItLeiOSll/Sn9nIBsBvbd8x5HV7AjcAe4w/pFiWJIlEJ9n+k+1jgBcBe0raDEDSoZI+WJfXlPTdetVyg6SfSFpO0peB9YFj6y2mt0nasJ6J7yXpcuAHPWW9CeVhks6UdJOkoyU9oG5r4Wsl7Q/8A/Bf9fP/q77Gkjauy/eXdLikayVdJundU1dU9argVEkfl/RHSZdIetZ0+0LSo+qVz42SLpD0vFr+PuDfgBfVOPaa5v0bAP8I7A1sL+nBfevfJulqSb+T9Mq+77FSjfNySX+otxNXqeueJulKSW+WdE39jJf3fO4qkj5Rv/+f6ndeRdJxkl7fF8O5kp4/7QERnZUkEp1m+0zgSsqPdr8313VzKbd03lne4pcCl1Ouau5n+z963vOPwKOA7afZ5B7AK4C1gTuAAwbE9C7gJ8Dr6ue/bsDnfAa4P/DQus09gJf3rN8K+A2wJvAfwBclqf9DJK0AHAt8H3gQ8HrgfyQ9wvZ7gQ8BX6txTHfFtgcw3/Y3gV8BL+75/B2ANwHPADYGntb33o8ADwc2r+vXoSSuKQ+u33MdYC/gs5LWqOs+DjwBeDLwAOBtwF3AYcBLemJ4XH3/cdPEHx2WJBJLg99RfoT6/Y3yY7+B7b/Z/omHDwb377Zvsf2XadZ/2fb5tm8B3gPsOlNl+iD19bsB77B9s+1LgU8AL+152WW2D651LIfV77HWgI/bGrgf8BHbt9v+AfBdYPd7ENIewBF1+QgWv6W1K/Al2xfYvhX4957vIcrVyxtt32D7ZkrS2q3n/X8D3l/3//HAn4FH1KuuVwBvsH2V7Ttt/8z2bcAxwMMlbVI/46WURHj7PfhO0RFJIrE0WIdyP7/fx4AFwPclXSxpv1l81hX3YP1lwAqUq4V7Ys36vsv6Pmudnue/n1qoP95QkkW/hwBX2L5rhs+alqSnABsBR9aiI4DHSNq89/N73tK7PBe4D3B2vZV2I/C9Wj7l+r76mFvr91gTWBn4v/6YbP8V+Brwkppsdge+PJvvE92TJBKdJmlLyg/mqf3r6ln+m20/FHge8CZJ206tnuYjh12prNezvD7lTPu6e/g519X3bdD3WVcN2fYgvwPW622hdg8/a09AwDmSfg+c0VMOcDWwbs/re7//dcBfgEfbXr0+7m97ULLrdx3wV+Bh06w/jHJbbVvgVtunzerbROckiUQnSVpN0nMoZ9BfsX3egNc8R9LG9bbLn4A7KffcAf5AqY+4p14iaVNJ9wHeD3xjmibA035+ff1RwP6SVq0V228CvjJCPGdQzu7fJmkFSU8DnsuiK4tpSVqZcrtqb0qdxtTj9cA/1wYFRwEvr5X396Hcwpv6HncBBwOfkvSg+pnrSJquPmmh+t5DgE9KeoikOZKeJGmluv40yt/qE+QqZKmWJBJdc6ykmym3Vd4FfJLFK6R7bQL8L+U+/GnA52yfUtd9GHh3vQ3zlnuw/S8Dh1JuN60M/Os0r/tP4IW1ddXdKt8pP9S3ABdTrqKOoPyo3iO1nuC5wLMoZ/efA/aw/etZvH1nypXE4bZ/P/WocSwP7GD7BErjgVMotwZPr++9rf779qlySTdR9vcjZhn+W4DzgLMotyM/yuK/OYcDj2G05BodoUxKFRFTJD0KOB9YaRZ9T/7ebe0B7G37qePcToxXrkQilnGSnl/7g6xBuVo4dgIJ5D7Aa4GDxrmdGL8kkYh4NXANpSXVncC/jHNjtU7lWkq90hFDXh4dl9tZERExslyJRETEyJJEIiJiZPeWkUxnbc011/SGG27YOoyIiKXK2WeffZ3tuf3ly1wS2XDDDZk/f37rMCIiliqSLhtUnttZERExsiSRiIgYWZJIRESMLEkkIiJGliQSEREjSxKJiIiRJYlERMTIkkQiImJky1xnw9nYcL/jlthnXfqRZy+xz4qI6JpciURExMiSRCIiYmRJIhERMbIkkYiIGFmSSEREjCxJJCIiRpYkEhERI0sSiYiIkSWJRETEyJJEIiJiZEkiERExsrElEUkrSzpT0i8lXSDpfbX8UEmXSDqnPjav5ZJ0gKQFks6V9Piez9pT0kX1sWdP+RMknVffc4Akjev7RETE3Y1zAMbbgG1s/1nSCsCpkk6o695q+xt9r38WsEl9bAUcCGwl6QHAe4F5gIGzJR1j+4/1Na8CzgCOB3YATiAiIiZibFciLv5cn65QH57hLTsBh9f3nQ6sLmltYHvgJNs31MRxErBDXbea7dNtGzgc2Hlc3yciIu5urHUikuZIOge4hpIIzqir9q+3rD4laaVatg5wRc/br6xlM5VfOaA8IiImZKxJxPadtjcH1gWeKGkz4B3AI4EtgQcAbx9nDACS9pY0X9L8a6+9dtybi4hYZkykdZbtG4FTgB1sX11vWd0GfAl4Yn3ZVcB6PW9bt5bNVL7ugPJB2z/I9jzb8+bOnbskvlJERDDe1llzJa1el1cBngn8utZlUFtS7QycX99yDLBHbaW1NfAn21cDJwLbSVpD0hrAdsCJdd1Nkraun7UHcPS4vk9ERNzdOFtnrQ0cJmkOJVkdZfu7kn4gaS4g4BzgNfX1xwM7AguAW4GXA9i+QdIHgLPq695v+4a6/FrgUGAVSqustMyKiJigsSUR2+cCWwwo32aa1xvYZ5p1hwCHDCifD2z290UaERGjSo/1iIgYWZJIRESMLEkkIiJGliQSEREjSxKJiIiRJYlERMTIkkQiImJkSSIRETGyJJGIiBhZkkhERIwsSSQiIkaWJBIRESNLEomIiJEliURExMiSRCIiYmRJIhERMbIkkYiIGFmSSEREjCxJJCIiRja2JCJpZUlnSvqlpAskva+WbyTpDEkLJH1N0oq1fKX6fEFdv2HPZ72jlv9G0vY95TvUsgWS9hvXd4mIiMHGeSVyG7CN7ccBmwM7SNoa+CjwKdsbA38E9qqv3wv4Yy3/VH0dkjYFdgMeDewAfE7SHElzgM8CzwI2BXavr42IiAkZWxJx8ef6dIX6MLAN8I1afhiwc13eqT6nrt9Wkmr5kbZvs30JsAB4Yn0ssH2x7duBI+trIyJiQsZaJ1KvGM4BrgFOAv4PuNH2HfUlVwLr1OV1gCsA6vo/AQ/sLe97z3TlERExIWNNIrbvtL05sC7lyuGR49zedCTtLWm+pPnXXnttixAiIu6VJtI6y/aNwCnAk4DVJS1fV60LXFWXrwLWA6jr7w9c31ve957pygdt/yDb82zPmzt37hL5ThERMd7WWXMlrV6XVwGeCfyKkkxeWF+2J3B0XT6mPqeu/4Ft1/LdauutjYBNgDOBs4BNamuvFSmV78eM6/tERMTdLT/8JSNbGzistqJaDjjK9nclXQgcKemDwC+AL9bXfxH4sqQFwA2UpIDtCyQdBVwI3AHsY/tOAEmvA04E5gCH2L5gjN8nIiL6jC2J2D4X2GJA+cWU+pH+8r8Cu0zzWfsD+w8oPx44/u8ONiIiRpIe6xERMbIkkYiIGFmSSEREjCxJJCIiRpYkEhERI0sSiYiIkSWJRETEyJJEIiJiZEkiERExsiSRiIgYWZJIRESMLEkkIiJGliQSEREjSxKJiIiRJYlERMTIkkQiImJkSSIRETGyJJGIiBjZ2JKIpPUknSLpQkkXSHpDLf93SVdJOqc+dux5zzskLZD0G0nb95TvUMsWSNqvp3wjSWfU8q9JWnFc3yciIu5unFcidwBvtr0psDWwj6RN67pP2d68Po4HqOt2Ax4N7AB8TtIcSXOAzwLPAjYFdu/5nI/Wz9oY+COw1xi/T0RE9BlbErF9te2f1+WbgV8B68zwlp2AI23fZvsSYAHwxPpYYPti27cDRwI7SRKwDfCN+v7DgJ3H820iImKQidSJSNoQ2AI4oxa9TtK5kg6RtEYtWwe4oudtV9ay6cofCNxo+46+8oiImJCxJxFJ9wO+Cexr+ybgQOBhwObA1cAnJhDD3pLmS5p/7bXXjntzERHLjLEmEUkrUBLI/9j+FoDtP9i+0/ZdwMGU21UAVwHr9bx93Vo2Xfn1wOqSlu8rvxvbB9meZ3ve3Llzl8yXi4iIsbbOEvBF4Fe2P9lTvnbPy54PnF+XjwF2k7SSpI2ATYAzgbOATWpLrBUple/H2DZwCvDC+v49gaPH9X0iIuLulh/+kpE9BXgpcJ6kc2rZOymtqzYHDFwKvBrA9gWSjgIupLTs2sf2nQCSXgecCMwBDrF9Qf28twNHSvog8AtK0oqIiAkZWxKxfSqgAauOn+E9+wP7Dyg/ftD7bF/MotthERExYemxHhERI0sSiYiIkSWJRETEyJJEIiJiZEkiERExsiSRiIgYWZJIRESMLEkkIiJGliQSEREjSxKJiIiRzSqJSHrKbMoiImLZMtsrkc/MsiwiIpYhMw7AKOlJwJOBuZLe1LNqNcqIuhERsQwbNorvisD96utW7Sm/iUXzeERExDJqxiRi+0fAjyQdavuyCcUUERFLidnOJ7KSpIOADXvfY3ubcQQVERFLh9kmka8Dnwf+G7hzfOFERMTSZLZJ5A7bB441koiIWOrMtonvsZJeK2ltSQ+Yesz0BknrSTpF0oWSLpD0hlr+AEknSbqo/rtGLZekAyQtkHSupMf3fNae9fUXSdqzp/wJks6r7zlA0qDpeCMiYkxmm0T2BN4K/Aw4uz7mD3nPHcCbbW8KbA3sI2lTYD/gZNubACfX5wDPAjapj72BA6EkHeC9wFaU+dTfO5V46mte1fO+HWb5fSIiYgmY1e0s2xvd0w+2fTVwdV2+WdKvgHWAnYCn1ZcdBvwQeHstP9y2gdMlrS5p7frak2zfACDpJGAHST8EVrN9ei0/HNgZOOGexhoREaOZVRKRtMegctuHz/L9GwJbAGcAa9UEA/B7YK26vA5wRc/brqxlM5VfOaA8IiImZLYV61v2LK8MbAv8HBiaRCTdD/gmsK/tm3qrLWxbkmcf7mgk7U25Rcb6668/7s1FRCwzZns76/W9zyWtDhw57H2SVqAkkP+x/a1a/AdJa9u+ut6uuqaWXwWs1/P2dWvZVSy6/TVV/sNavu6A1w+K/yDgIIB58+aNPWlFRCwrRh0K/hZgxnqS2lLqi8CvbH+yZ9UxlIp66r9H95TvUVtpbQ38qd72OhHYTtIatUJ9O+DEuu4mSVvXbe3R81kRETEBs60TORaYOoOfAzwKOGrI254CvBQ4T9I5teydwEeAoyTtBVwG7FrXHQ/sCCwAbgVeDmD7BkkfAM6qr3v/VCU78FrgUGAVSoV6KtUjIiZotnUiH+9ZvgO4zPaV070YwPapwHT9NrYd8HoD+0zzWYcAhwwonw9sNlMcERExPrO6nVUHYvw1ZSTfNYDbxxlUREQsHWY7s+GuwJnALpTbT2dIylDwERHLuNneznoXsKXtawAkzQX+F/jGuAKLiIjum23rrOWmEkh1/T14b0RE3EvN9krke5JOBL5an7+I0poqIiKWYcPmWN+YMkzJWyW9AHhqXXUa8D/jDi4iIrpt2JXIp4F3ANQe598CkPSYuu65Y40uIiI6bVi9xlq2z+svrGUbjiWiiIhYagxLIqvPsG6VJRlIREQsfYYlkfmSXtVfKOmVlImpIiJiGTasTmRf4NuSXsyipDEPWBF4/jgDi4iI7psxidj+A/BkSU9n0RhVx9n+wdgji4iIzpvtfCKnAKeMOZaIiFjKpNd5RESMLEkkIiJGliQSEREjSxKJiIiRJYlERMTIkkQiImJkY0sikg6RdI2k83vK/l3SVZLOqY8de9a9Q9ICSb+RtH1P+Q61bIGk/XrKN5J0Ri3/mqQVx/VdIiJisHFeiRwK7DCg/FO2N6+P4wEkbQrsBjy6vudzkuZImgN8FngWsCmwe30twEfrZ20M/BHYa4zfJSIiBhhbErH9Y+CGWb58J+BI27fZvgRYADyxPhbYvtj27cCRwE6SBGzDoul5DwN2XqJfICIihmpRJ/I6SefW211r1LJ1gCt6XnNlLZuu/IHAjbbv6CsfSNLekuZLmn/ttdcuqe8REbHMm3QSORB4GLA5cDXwiUls1PZBtufZnjd37txJbDIiYpkw2znWl4g6oCMAkg4GvlufXgWs1/PSdWsZ05RfD6wuafl6NdL7+oiImJCJXolIWrvn6fOBqZZbxwC7SVpJ0kbAJsCZwFnAJrUl1oqUyvdjbJsyIOQL6/v3BI6exHeIiIhFxnYlIumrwNOANSVdCbwXeJqkzQEDlwKvBrB9gaSjgAuBO4B9bN9ZP+d1wInAHOAQ2xfUTbwdOFLSB4FfAF8c13eJiIjBxpZEbO8+oHjaH3rb+wP7Dyg/Hjh+QPnFlNZbERHRSHqsR0TEyJJEIiJiZEkiERExsiSRiIgYWZJIRESMLEkkIiJGliQSEREjSxKJiIiRJYlERMTIkkQiImJkSSIRETGyJJGIiBhZkkhERIwsSSQiIkaWJBIRESNLEomIiJEliURExMiSRCIiYmRjSyKSDpF0jaTze8oeIOkkSRfVf9eo5ZJ0gKQFks6V9Pie9+xZX3+RpD17yp8g6bz6ngMkaVzfJSIiBhvnlcihwA59ZfsBJ9veBDi5Pgd4FrBJfewNHAgl6QDvBbaizKf+3qnEU1/zqp739W8rIiLGbGxJxPaPgRv6incCDqvLhwE795Qf7uJ0YHVJawPbAyfZvsH2H4GTgB3qutVsn27bwOE9nxURERMy6TqRtWxfXZd/D6xVl9cBruh53ZW1bKbyKweUR0TEBDWrWK9XEJ7EtiTtLWm+pPnXXnvtJDYZEbFMmHQS+UO9FUX995pafhWwXs/r1q1lM5WvO6B8INsH2Z5ne97cuXP/7i8RERHFpJPIMcBUC6s9gaN7yveorbS2Bv5Ub3udCGwnaY1aob4dcGJdd5OkrWurrD16PisiIiZk+XF9sKSvAk8D1pR0JaWV1UeAoyTtBVwG7FpffjywI7AAuBV4OYDtGyR9ADirvu79tqcq619LaQG2CnBCfdxrbbjfcUvssy79yLOX2GdFxLJtbEnE9u7TrNp2wGsN7DPN5xwCHDKgfD6w2d8TY0RE/H3SYz0iIkaWJBIRESNLEomIiJEliURExMiSRCIiYmRJIhERMbIkkYiIGFmSSEREjCxJJCIiRpYkEhERI0sSiYiIkSWJRETEyJJEIiJiZEkiERExsiSRiIgYWZJIRESMLEkkIiJGliQSEREja5JEJF0q6TxJ50iaX8seIOkkSRfVf9eo5ZJ0gKQFks6V9Piez9mzvv4iSXu2+C4REcuyllciT7e9ue159fl+wMm2NwFOrs8BngVsUh97AwdCSTrAe4GtgCcC751KPBERMRldup21E3BYXT4M2Lmn/HAXpwOrS1ob2B44yfYNtv8InATsMOmgIyKWZa2SiIHvSzpb0t61bC3bV9fl3wNr1eV1gCt63ntlLZuuPCIiJmT5Rtt9qu2rJD0IOEnSr3tX2rYkL6mN1US1N8D666+/pD42ImKZ1+RKxPZV9d9rgG9T6jT+UG9TUf+9pr78KmC9nrevW8umKx+0vYNsz7M9b+7cuUvyq0RELNMmnkQk3VfSqlPLwHbA+cAxwFQLqz2Bo+vyMcAetZXW1sCf6m2vE4HtJK1RK9S3q2URETEhLW5nrQV8W9LU9o+w/T1JZwFHSdoLuAzYtb7+eGBHYAFwK/ByANs3SPoAcFZ93ftt3zC5rxERERNPIrYvBh43oPx6YNsB5Qb2meazDgEOWdIxRkTE7HSpiW9ERCxlkkQiImJkSSIRETGyJJGIiBhZkkhERIwsSSQiIkaWJBIRESNLEomIiJEliURExMiSRCIiYmRJIhERMbIkkYiIGFmrSaniXmDD/Y5bYp916UeevcQ+KyImJ1ciERExsiSRiIgYWZJIRESMLEkkIiJGliQSEREjSxKJiIiRLfVJRNIOkn4jaYGk/VrHExGxLFmq+4lImgN8FngmcCVwlqRjbF/YNrJoaUn1X0nflYjhluokAjwRWGD7YgBJRwI7AUki0SlJbHFvJdutYxiZpBcCO9h+ZX3+UmAr26/re93ewN716SOA3yyBza8JXLcEPmdJ62JciWl2EtPsdTGue3tMG9ie21+4tF+JzIrtg4CDluRnSppve96S/MwloYtxJabZSUyz18W4ltWYlvaK9auA9Xqer1vLIiJiApb2JHIWsImkjSStCOwGHNM4poiIZcZSfTvL9h2SXgecCMwBDrF9wYQ2v0Rvjy1BXYwrMc1OYpq9Lsa1TMa0VFesR0REW0v77ayIiGgoSSQiIkaWJBIRESNLEomIiJEliURExMiSRCIiYmRJIhERMbIkkYiIGFmSSEREjCxJJCIiRpYkEhERI0sSiYiIkSWJRETEyJJEIiJiZEkiERExsiSRiIgYWZJIRESMLEkkIiJGliQyhKRDW8cQEdFVSSLDPbZ1ABERXbV86wCWAveRtAWgQStt/3zC8UREdIZst46h0yTdDJzF4CRi29tMOKSIiM7IlchwC5IoIiIGS51IRESMLElkuLe1DiAioqtSJzKEpFOA6XaSbW87yXgiIrokSWQISU8YULw15QrlGttbTjikiIjOSBK5ByT9I/AeYGVgf9snNA4pIqKptM6aBUnbA+8GbqMkj1MahxQR0Qm5EhlC0lnAXOBjwGn969PZMCKWZUkiQ0j6ITNXrKcPSUQss5JEIiJiZOknMoSkt/Us79K37kOTjygiojuSRIbbrWf5HX3rdphkIBERXZMkMpymWR70PCJimZIkMpynWR70PCJimZKK9SEk3QncQrnqWAW4dWoVsLLtFVrFFhHRWpJIRESMLD3Wh5D0gJnW275hUrFERHRNrkSGkHQXcCVwx1RRz2rbfujko4qI6IZciQx3APB04KfAV4FTncwbEQHkSmRWJAl4GrA78ETg+8CBti9pGVdERGtp4jsLLk6hzCHyeeDlwDPaRhUR0V5uZw0h6b7ATsCLKKP5fgt4gu3LmwYWEdEBuZ01hKRbgIuAI+u/i+0w299qEVdERBckiQwh6VBmHgr+FRMMJyKiU5JEIiJiZKlYH0LSVpJ+KenPkk6T9KjWMUVEdEWSyHCfBd4CPBD4JPDptuFERHRHkshwy9k+yfZttr9OaaEVERGkie9srC7pBdM9T+usiFiWpWJ9CElfmmF1WmdFxDItSSQiIkaWOpFZkLSZpMMkza+PwyQ9pnVcEUuKpA0k3b/n+dMl/aekN0lasWVs0W1JIkNI2gn4NvAj4BX18SPgW3VdxL3BUcB9ASRtDnwduBx4HPC5hnFFx+V21hCSfgnsZPvSvvINgaNtP65BWBFLlKRzbT+2Ln8cuMv22yQtB5wztS6iX65Ehlu+P4EA1LLMrx73Fr2TrW0DnAxg+6424cTSIk18h7tD0vr9o/ZK2oBFsx1GLO1+IOko4GpgDeAHAJLWBm5vGVh0W65Ehnsv8L+SXibpMfXxcsrEVO9tEVBfv5WIJWFfyjQHlwJPtf23Wv5g4N0tAspxPnst91XqRGZB0uOANwOPrkUXAJ+w/ctG8fzc9uNbbDvunSTtafuwAeUrAIfb3r1BTDnOZ6nlvsrtrFmoyWKP/nJJl9tev0FIEUvaGyStZPugqYI6Idu3gSvahRVdlyuRv4OkK2yv12C7twILBq2i9KJPS5q4RyQ9APge8BXbB0iaCxwPnGx7v0Yx5TifpZb7Klcif59WGfgS4LmNth33QrZvkPQM4ARJD6FMCf152//ZMKwc57PXbF8liQwh6U3TrQLuN8lYetxu+7JG2457oZ6K2YMoUx6cDFwxVd5ooNEc57PXbF8liQy36gzrWp2l/bTRduPeq/cs9pi+MlNabk1ajvPZa7avUieyFJK0JzPcSrN9+ATD6TRJ37e9Xes44p7r6nEuaUvgCtu/r8/3AP4JuAz4d9s3NIip2b5KEhlC0lG2d63LH7X99p51TX6gJH1mmlXPA9axnSvMStIvbG/ROo6lgaQ5wBq2r6vPVwReBrzR9sSnhe7qcS7p58Azaj3S/wOOBF4PbA48yvYLG8TUbF/lx2a4TXqWnwm8ved5k1kObb9+almSgBdT4jod2L9FTB12/5k6YmVSsULSbsAXgFskXUQ5jg4BzqIcXxPX4eN8Ts/VxouAg2x/E/impHNaBNRyXyWJDDfTpVqzyzhJy1POEt9COVBeaPs3reLpsPsDz2HxsaGmtLrX30XvBp5ge4GkxwOnUY6pY1sG1dHjfI6k5W3fAWwL7N2zrtlvaqt9lSQy3H0kbUEZImaVuqz6WKVFQJL2Ad5AaUGzw6ABImOhyzL75KzcbnsBgO2fS7qoAwmkq8f5V4EfSboO+AvwEwBJGwN/ahFQy32VOpEhJP2QmSusnj65aApJdwHXANeyeGzphNUndSKzI+lKStPeKW/qfW77k3d70/hj6uxxLmlrYG3g+7ZvqWUPB+5n++cN4mm2r3IlMtwzewaj64qNWgewFHlJ6wCWEgezeHP23uetzjQ7eZxL2sb21CjHG1E6+mH7t7X+beJJhIb7KlciQ0i6htJu/gjgFHdgh0l6pO1f16n+YV4AACAASURBVOWVbN/Ws25r26e3i65bJF3CgDOzumzbD2sQ0809MUzV1ZhyUrdi11rXSdrS9lkNttvJ47x3sMP+gQ9bDYTYcl9lKPjhHkVpofIeSg/e/6yXsi0d0bN8Wt+6TGW6uHnAlj2PJwKfoPx4t2pJs6rt1epjVcptkf2B39OuA+tiJG0q6QOSFgAHNgqjq8e5plke9HxSmu2rTp3xdJHt6ylNH79QxxTaBfiUpAcBR9p+V4OwungQd1L9+1GneX0p8FZK8ni27QtbxiZpdco8HntQfgS2nIq3UTwbArvXx9+ADYB5DSu0u3qce5rlQc8npdm+ShK5B2z/TtIXgT9SKh5fCbRIIl08iDupzofxCuCNwKnAzlOtkBrGtCZlfpoXUfpibGG7SauenphOA1ajdJz7J9sXSbqkcYuorh7nD5V0DOXHeWqZ+rxV3USzfZUkMguSVqaMI7Q78GTKkNn7ASc1CmldSQdQDtqpZerzdRrF1FWXUKYx/jRwOfBYSQtbqjTqbHgZpRXNl4Bbgb1K/7CFMU28JRTwB8qxsxalE+1FtD8h6epxvlPP8sf71vU/n5Rm+yoV60NIOgJ4BvAjylnacbb/2jimPWdaP2iGumWVpEOZ/sfQLfqQSPp3Zm42/r7JRbOIpPsDL6CcLG0CrA5sb/vMRvF08jivc63M7b8dKmlT4Frb1zaIqdm+ShIZog6u9m3bN7eOpeskPRc4d2pIakn/xqKB6d5g+5KW8cXs1Tq/XSkJZf0Wk691laQjgc/Z/nFf+T8A/2L7n9tE1kaSyBCSPm1737r8ht5JeiQdavtlDWI6Zqb1tp83qVh6SToX2Nr2rZKeQ+mstjuwBbCL7e0bxNS5v1/d9rOAdwCb1qILgI/aPr5RPJtQbsU8DDgPeIvtq+q6DVrMVdHh43y+7XnTrDvf9mYNYmq2r1InMtz/61nek8WbYLbqMfskyrzXXwXOoDstsmz71rr8AuCLts8Gzpb02kYxde7vJ+lVwKuBtwHza/E84COS1nXPPOcTdAhwOPBjysivn6H8DWmRQKquHuczzTG0wsSiWFyzfZUkMtxMTedaeTBlROHdgX8GjgO+avuCplGVAUTvR6ks3pbF26ev3CakTv793gg8tW/eiR/Uq5NTKbMLTtqqtg+uyx+rw5231tXjfIGkHfuvGuvf7+JGMTXbV0kiwy0naQ1Kx8yp5akfozktArJ9J6WF2PckrUQ5cH4o6X22/6tFTNWnKX0wbgJ+ZXs+QB208upGMXXu70e5jXy3iYtsX9/bSmvCVu4ZXBQWH2yUFuNBdfg43xc4TtKuwNm1bB7lauA5LQJqua9SJzKEpEuBu5hmKHHbD51sREU9UJ5NOVg2pAzNcsjUfexWJK0DPAj4pe27atnawPK2r2gQz6V07O8n6Qxgb9u/7Ct/HHCw7Sc2iOmUGVbb9jYTC6ZHh4/zlShn/FP1HxcAR7RsudlqXyWJLIUkHU45eI+n9Jo/v3FIAEj6b9uvHFC+HnBCiwrHLpL0VOB/KP1Ees9k9wReYvvUVrF1SVeP8y5qua+SRGZBZbKXZwGPrEUXAie6TErTIp67gFvq00HDPq82+agW9slYHtij5yrkUcB3gQ/YPrRBTDMOhtfiNg2ApAcDrwUeXYsuBD7rOm93dPo47x1Ac7FVNIqr5b5KEhmi3p75AeWe/i8of5QtKBVZT7f9uwYxreDuDU8/NS3nF4A1gN2ArYCvUdrOf7dRTHcB5wPXTRX1rG52myaG6+px3kUt91WSyBD17Poc25/uK/9XynSiM/YUHVNMTYabnq065MIWlAH8dh3nMNSziGVf4IWUGeeOpHQc/XOreGpM5zHzmWwmFaO7x7mk4ygDZn7HdUKq1lruqySRIST92vYjp1n3G9uPaBBTJ2frk/QZyo+jKJWOPwd+NbXe9r82Cg1JD6VcHe1E6UH/IdtNhoKXtMFM61v1yxhw2/ZXwPca3rbt6nG+E+VYegZwCqVvxnG2b28YU7N9lSa+w/1lhnW3zrBunOZKetN0KxsN4AeLOs71Lzdn+2JJRwOrUIaEfziN5hOhtMDartG2B5rmtu1zgE9IanLblo4e57aPBo6WdB/KwKx7AAdKOoHSQqvFwKzN9lWSyHD3V5nysp8oQ2e3MAe4H93pPAfMPMibpPUnGUvPdnuvQK6g3NL6kO2ZTg7GbW7DbU9nf+DAaW7bfpjScmzSOnmcT6mjM3wN+FodGfowSkJp0f+o2b7K7awhJH1ppvW2Xz6pWKZ09V4xgKQnUYae/rHta+p/rv2Af2gxiF+tWD8XOJrSCXKxA77F2ayki4G3TLfeDYan7+ht284e5wCS1qIMUrkbZXbKoyi9xH854xvHE0uzfZUrkSFaJIlZmPZsQ9JTbP90ksH0bPtjlFsg5wBvl3QiZeKuD1Mmhmqhd1j1+zWKod/9KftpYAdIoMUcJ128bdvV4/xVlA59jwC+CbzV9s9axNKj2b5KElk6bS9pd8oZ//dsn19HzX0n5Z5/q8rIZ1Nm6ftrHV7kCmAzt50d7/rGQ2QMcpkbzGMyRBdv23b1OH8S5cTo5Kn+UFMkrW/78gYxNdtXuZ21FKrNjtcDzqT0xfgdpcfzfra/0zCuxS6pu9C6pou3RKbbL6ozaNr+eoOYunjb9lA6eJxDJ2/bHkqjfZUkMoSk1Wzf1DqOXpIuAB5j+676w/N74GG2r28c142UocShnMH+Q8/zJvM/dDSJbDY1LIWkOcD2lNsj2wE/sf3ClvF1RYeP8/+gtMo6B9gY6L1t+4UW42e13Fe5nTXcLyS9y/aRrQPpcdvUZXS9dXRx6/9Y1U59z1vNN93rsZIGnQQ0G6Ki3mr4R0pfmh0pZ49PATbyovlYJkplBs/p2PaXJxbMIl09zp9D927bNttXuRIZonYM+zSlUvZfbC9oHBKSbgWm4hBlNroFdKTHcz0T2rg+XdDizKwnlua31PpJuhK4HDiQ0uv5ZkmX2N6oYUyfmWbV84B1bE/8hLOrx3lHb9s221e5Ehmi9h5+vsqEMz+VdBZlaPGp9S2m6HxUg20OVXs8f4jSEusyygG8Xr3f/q6Mg7TQN4CdgRcBd9ZOkE3P5my/fmq5joH2YuDtwOmUPiQtdPI4Bx6qxaej3aj3+bL2m5ArkVmQ9AjKLH1/BD7L4knkR63i6qcyxPjutvdptP1PUaYOfaPtm2vZapTbWn+x/YYGMb3T9ocGlG9HaZr5zEnHVLcv4GmUupAdKc1+9wKObzW2Vz0JeBmlD8vpwIdt/6ZFLDPpwHH+jzOtX9Z+E3IlMoSkj1Du9b/R9vdax9NPZfa5fwZ2AS6hTR+DKc8BHu6eMxPbN0n6F+DXwMSTCHC6pN8CDwG+A3yUMo+HaHSGLel1tdnxKcApklZgUeX654A1G8S0D+XvczKwQ+P7+3fTseP8F9M1tmk1MkNfDBPdV7kSGULSycCzW97X7yfp4ZQfnN0pQ5x/DXiL7RkH9ptAXL+1/fB7um7MMf2CMqf5aZTBBb9CafbYrO/ITC3GJK3SYkiW2rP/GuBaBs9HMfH6hw4f5wv/fpJOtr3toHUTjqnZvsqVyHBrdCmBVL8GfgI8Z6qiX9Ib24YEwIWS9rB9eG+hpJdQYm7C9g/r4nckXdXBzocLtUggVbNK/Rl09Tjv7R3+gBnWTVKzfZUksnR6AWW8nlMkfY8yqGAXBqnbB/iWpFew+LSvqwDPbxRTf0/s5Xuftxinim42Ox44/PzUPXXK33bSunqce5rlQc8npdm+yu2sIfo60N1No5YYAEi6L6W+ZndgG+BwyqRL328VU41rG3qmfbV9csNYZuqJ7RbDj3ShSehMBt1Ttz1dE+BJxNOp47w20f4k5Uf6jXWZ+nzfFj3We2Kb+L5KEhlC0kWU3qgDtWqJIWkuZebABbZvrJ2edgFe1HuPdsIxfRr4GfBT21e1iOGekLSW7T802G7nkkiH6x+6eJy/d6b1tt830/pxabWvkkSG6Oh/+FdS+mP8H+Ve9t62j5n5XeMn6XXAk+sDSkL5GfBT4JfuG6yuBUmrA/9EOdN+lO2HNIihc82Oa8X6T4C9eu6pX2z7oZOOpSemTh7nXdR0X9nOY4YH5VK+eRx9MZ0PzK3LDwVOax3TgBgfQpnb/JOUnrM3NYxlFcr94mMoQ1TcSOmjsVyjeLYBfgv8mdJa7DGUmSDPBl7QKKadKffRrwAOBrYFLml8DHXyOAdeBWxSlwUcAvyJMm/NFsvavkrF+nD/o8FDZAPNKmZvt31t3f7FklZqEMNAtRPdYyhXI08BNqUkkRZjLyHpCMpAkN8HPkOZAnaBF7XYauETwN4sanZ8Go2bHbuM9Pqdnnvq+wIPknQg7eofunqcvwE4tC7vDjyO8sO9BXAA5XibtGb7Krezhuhoxew1lLPGKbv1Prf9r5OOCUDSSZS5J86h9Hg+3favWsTSE9M5wHKUCsYjbV/Zgds0i90iVaOZA4dpXf/Q4eP8HNub1+UjgDNs/2d93qqfSLN9lSuRIdzNmQ3f2vf87IGvmryLgccCmwDXA9dJutb2da0Csr25pEdSzhj/V9J1wKqtKtWrLjY7vhvbfwQOqo8Wunqc3yVpbcowSNuy+MgHq7QJqd2+ypXIEOrmENnTkrS87Tsax7AasDXlltbWwFzgfNt7towLQNITKAllV+BK208e8pZxxNC5q9ulTcvjXGXGwC8Ac4Bjbb+qlv8j8Dbbz24R13TGva+SRIZQN4fIPtX2U+vyl22/tGdd80mY6v3YLSl1IlOJ5Brbj2kQy4MoU4RuTKn4/IjLeF6izEI3bR+gaKvLx3kdrHLVerU2VXZfym/qxAfQbLmvlhvXB99b2H791AP4V+AMSsue04FWB/F9e5Yf3beuWY9eSZ+SdAZwNfA+yoi+nwce0SKBVIcDt1Aq1VelVHziolkCkbSZpMMkza+PwyS12kdd1cnjHMD2Hb0JpJbd0iKBVM32VepEZkF3HyL7hW47RPZMl48tLy0voTRZPcf2nQ3j6LW27XfV5RMl/bxpNICknSjD43+Y0lILyvAw35L0FttHN4jpEgYMvFiXbfthk46J7h7nXdRsXyWJDKFuDpG9uqTnU64kV++plBVlXoombB/Qatszqa2Mps7G5vQ+t31Dg5DeDzyz71g6V9IPgKPrY9Lm9T1fjlJv9BbgF5MPB+jocT4TSQ+x/bsGm262r1InMoS6OUT2TBWzXW1R1oSkSymTiA26pHeLpr6SLrDdf8that2FtjeddEw9218OeCmltc85wIdsX9golqXuOJd0ue2JzynScl/lSmS4zg2R3cX/PF1le8PWMQxwh6T1bV/eWyhpA6BVi6MVKNMavxE4FdjZdfiTVpbS47xJXU3LfZUkMoSnGSK7NZUpe/cGHlmLfgUcZPu3DWPaEljT9gl95TsCf7A98Xb+kl5i+yt1+Sm2f9qzbmqGwUl7L6XPyodYfMj8/SjzmrdwCSWBfRq4nDJc/cKr7FZ9V7p4nA/R7NZOq32V21lDSLqZu88fcB1latO3276+QUxPokx5eRDwc8rZzxaUMX1eYPv0ScdU4/oB8PL+xFvPsL9ke5sGMfXOQrdYU8eWzUQlPQ54M4ta0lwAfML2LxvFcyjT/wC2Gpmhq8f5Zxi8rwTs6QbzwbTcV0kiI6gVsy8Dnmx7lwbbPwH4aP/4T7Wz0362nzXpmOr2z7K95TTrzm1Uf7RwiJEBw400G6FZfcN2t4ih6zp8nM/Yadb2YZOKZUrLfZUk8ndoOE7OTHOZNxuHSdIC2xvf03VjjqlzVyLq6BDnkjajVKj3Xh193PZ5jeLp5HE+HUkrA8+1/fUG2262r9LZcES1IrJVndLNM6y7ZWJR3N3/Stq/9gYHQMX7KaPntvBISedKOq9neep5qx+hfYFH234SpUf/OxrFsVDtu/Jt4EeUCvZX1OVv1XUtdPU4X0jSHEk7SvoycBnwokahNNtXqVgfQoOHgV+DcrB8Y8LhTFlP0qA+GQLWmXQwPd4M/DewQGX0XCjDZM9nhtkhx+xRjbY7ky4Ocd7FvitdPc6nbhP9M7AjcCZliJ+NbN/aKKRm+ypJZLjn9j03ZYTa/7R9XIN44O4jdvaaP7Eo+ti+Bdhd0kPpuSVi++KGMV0GTM1ouEkt/q3tP7WKCVi37z/8Ys/dZojz5Qd1pLV9ab3qbqGTx7nKHOuXAwdSphC+WdIlDRMINNxXqROJJUbSjPULtic+5Eg9y/8CZea+SyhnZhtQbt28xvbtDWLqYsXsLyn38wf1XTm2RaOIrpL0acrxdD5wBOUq7bwWHVe7IElkiGkuERdqdNbYSZJOmWG1GzXx/QBl1rnX2L65lq0KfBa4zPZ7Jh3TILXF341u9B9S0s7Af1Aq/O/Wd8Vl5sOoar3f0yjTCuxIGVpkL+D4hoMwNpEkMoSk2ylnHEcBv6OvR2qLs8alkaStW7Trl3Q+8MT+Ww2S7keZeXGzBjH9G3CU7V/XK6UTgM0pnf3+2fb/TjqmGld/35ULKa2zmvRdWVrU2307UGYT3N72mo1DmqjUiQy3NnWKUMp/8q8B30jb/nvsKGDiYwoBdw26V237z5JanUG9CPhAXd6TcmIyF3g4cBjQJInUZDHTJGwxgO2/AcdK+i1wW+t4Ji1JZIjaI/3zwOclrUs527hQ0tvdaFbDGXrMAp29xdZq/gdr8VF8e9016WCq23tuW21Pmfv9TuBXKtMOTJykY5n5mHreBMMBQNJRtnetyx+1/faedd+3vd2kY6rbfixlKP+HAN+h3Br9L2ArFg3tP+mYHg08bKq/kaRPsWj03v8aZ31kksgs1Urj3YFnUm4/tJzvube1xfsoYzF1Xauz/vtT/lYDR/GdcCxTbqsd+/4APJ0y3PqU+7QJiY832u5MNulZfiaLjys2d8Kx9DqY0jLrNMptrHMoV5Avtv3XRjF9hDI/zZTtgfdQjqd/ozQEGIskkSFqR7lnUwYzOxJ4hxvPYd5bDyNp367Uy8xwNivggRMOB+jsKL77UvoYzQU+ZfsSWDhQZau5O15u+2WNtj2drk5KtZLtQ+vybyS9wfbbGsYDZfK1n/U8v8n2NwEkvXqcG04SGe7dlKahj6uPD9UO2c3mE+nTpZYRM53NdvFMt4nawOCRA8qPB46ffEQAtD6OB7mPpC0oI2usUpdVH6s0jGvlnligXFkufN6iKTtl6ueFbG/d8/RB49xwkshwnZtPpKts/6h1DEsDSTNVXrtRXdt9+n4YF9Poh/H3wCcHLE89b2VQLFPPDUy8KTvwO0lb2T6jt1DS1pRWpWOTJr5Lob7h6e8DTLU+mro6mvhQ1DWuTYB3An+k/Kc6GPgHykCDr7R9Vou4uqY2jBjkecA6tid+clePqbOYpu6oRR+fmD1JT6S0HD2UMhQ8wBMorf9eZPvMsW07SWRmuvt8IqrPm/1gS1qhNivsFEmnAocDq1FmyNsXOJaSSD5oe6sGMW1j+wd1eaOp+of6/AVuNNlSTwwCXkypNL4Q2N/2uQ3iaDYs/nQkvYTyG/XlvvKXAnfaPqJRXG+z/R91eZfeUXslfcj2OxvFtRawD4uPwvxZ238Y63aTRGYm6TvAgykTvhzZPyxEC62GMB9G0jm2N6/Liw393rtuwjF1bij4uu3lKXPSvAU4Hfiw7d+0iKXGM20SkbRli6tISWcA2/b3AJd0X+DHtp8w6Zjq9jt5TLWSOpEhbO8s6f7AC4CD65wBX6MklBsahdWqz8Uwvf0ubpph3SRpmuVBzydC0j7AG4CTgR0GDXzYwGLT8kralNKkfXfgRsoQKJO2wqAhRGzf0nBQSOjmMXUKM89Mue24tp0kMgt1xNcvSTqM0tnwAGBlFq9cm6S5kt403UrbreJ6pKRzKf+RHlaXqc9bDU7XP7XxdOsm6TPANcBTgaeoZ/oVGrX4s/19SRuyKHH8jTJQ5byGSW4VSfd1GR16oTr22YqNYoJuHlNvGVC2NfA2yrE2NkkisyDpyZT/WP8AnAo83/ZPGoY0B7gf3epAB92cu+Ohko6hJrK6TH3equVd51r8STqNUpd1JPBPti+qw5tf2jCsLwLfkPQaLxrSf0NKD/EvNozrcZJuojY1rsvU5yu3CMj2ws7Pda6T99RYXmP7hHFuO0lkCEmXUi7njwT2poyftXDY80ZNH6+2/f5BKyT906SDmTL1H71jemfl6++r0qTvynT7SdJTKScr+0w2IqD0nl8HWIvSCfIiGvdBsv1xSX8GflwHzBRlBr+P2D6wYVxzWm17JpK2p/Rru43SQGOmUbWX3HZTsT4zST9k5nuNLYY3n6kS9HLbLQY6HNSSzcB1wCmU4cSvbxHXdCQ9xfZPG8ewBWWGvF0onVq/ZXu6JsDjjmWq7m93ypAjq1NGpR1b89DZqrewcB3OPxYn6SxK8v8YZTiWxYzzZDdJZCkk6QHTVepLusL2epOOaTp18MOXAU+2vUuD7c8BdqWcZX/P9vmSnkPpz7JKi2atkh7OorqH6ygNNd5ie4NJxzIdSQ+i7LfdgfVbHFMz1ftBu7q/npOl3tvJptzZWbFRP58f0uhkN0lkFup/qEHtr8daYTWKllciM2nV9FHSocB6lHmwt6L03p0H7OdGEy1Jugv4CbCX7QW17GJ3dGY8SZvYvqjBdmcaWNTT3dKdtHqrbR/g1cC3bb+5cUgTlTqRISQ9hTIF5qGUjnRQeoKeKenFLW6HSDqP6Qc6XGvC4QxVm2O2OtbmAY+1fVdtnv17ypDZLW+tvYDSyu8USd+j1Lc1bbYt6VTbT63LX7b90p7VXwMmfgJg+33TrZO07yRjmSaG1Skdaveg/EZs2eq4kvSCmdaPs1NtkshwnwB2tt07uuoxkr5Nmbt74r2wgec02OZQ0xzIa1AmYfrGhMOZcrvtuwBs/7We8Tetm6lXQN+pneZ2ovwQPUjSgZQz2e83COu+PcuP7lvXxX5JbwI+3WLDktakzAD5IuAQYIvaDaCl586wzpTO0mOR21lDSLrQ9qb3dF0LU617bLdo3YOkL/UVGbge+KHt4xqEhKRbgQVTT4GH1eddGYUZWFh39EJgt3F2DJth+0tVL+yWdX+SbgGuBb5EaS22mIb9tJrIlchwkrSG7T/2FT6AMkR1U4Na97SKxfbLa0xr2r6uVRx9uth3ZarCf42e/XQLJbGt0yik1SU9n3JMr95zVSkWzZDXJS3Pfj/Ws/1VZ3rhpKjhyNC5EhlC0t7Aqyg9QntHx/wocIjtLzSIqZOte2qrpy9RejvfBezqxSfKCUDSbpRbobdQ+mPsT7ktchbwgRZ9jwZcRS5m6gRhkmZoBSVKy7qcBFdqOTK07TyGPCh1ED+m3Jq5ri4/t2E8dwE/AjbuKbu4A/vpXOCRdXkr4EcdiOlmyjhe/Y+bKbO/tYjp/Km/HaXC+raWx1Me9/jvd1TP8kf71n2/A/EJeAlwHuUE87Hj3F4y+SzY/i7w3dZx9Ohc657qDtu/BrB9xlQHsZZsN49hgNtdm/ba/rmki2wf2zqo/ltsklak9PF5o+1mtwUlPZ1Flf3n2/5hq1iqTs79PmBk6Bd6AiNDJ4kMIeljwAL33bZSmbd4I9v7TTomd7N1DzWGN0333A0qHNUzZ8iguq1G+vfT6h3YTwtvsUnqv8X24knHU2Nah1LH91dgamyoXSStQhm/7qoWcdHBud9bjgydOpEhJJ1NGcnUfeXLAefa3qxNZIurrXt2ocxiNvHWPTWGmTqH4Rna/Y/LTK2OWunofjqf0pR9QR0X7jTKmWyzK6TajP5o24f2le9BGSRyp4FvHH9cv6bURy4HfIXSsGVq7vevtLhqqx1Yr6G0GrvbJHoeYyvEXIkMt1J/AgFw6bzWau6Au83WV8+wD5LUrA9Eix+/WZhp7odWrrf9X62D6NPFW2yb2n5+f6HtwyW9q0VA1dV0b+73ZiNDJ4kM95dBwz6ozCf+l0YxfZxFPYi/yeK9id9Vy6JYpTaDXg5YuS4vTCZuMwrzK4CuJZHO3WJjmib09S5As5F0bT+91ban40VD5W/EovqjC21fPO5tJ4kM92/ACZI+yKL7svOAd1DqIlro3MxqHTbTWaOBiY/C3FEHs3ifh/7nLXxX0sHAvq4TU9V6wE8Bx7cKStJqwFpTJ5aSdgFWqatP9JjnNJ8hpv+m/DadU4s3r7fj97LdP9Poktt26kSGk7QZ8FZgqv7jfODjts9rFM9S1bs4FifpDuDWQaso969Xm3BInVTHXPswpcXR1Bws6wOHAe+0fXujuA4CfjZVVyNpAXACJZHcYfs1DWI6FLgUeL/rMD/1dvt7KM3JZ+qM+PdtO0lk6SPpRkpfFVFmW/zx1CrgqbbXaBTXobZfVpf3tH1Yizi6TjPMB9NKF1sh9sSwCrBxffp/tgcl4EnG8wvg8VN1pb1/z96BLCcc00W2N7mn65bItpNElj4q019Oy/aPJhVLr77/TLkimkZHk0jnWiHWesePU8Y7O48yKkOrZr0LSTrP9mN6nm9m+/y6fH6jfTVTEllge+NB65aE1IkshVoliVno3BmJpDm272wdR5+vtw5ggM61QqT0UzmccqX9POAzlI62rd0l6cG2fw/Qk0DWoYwm0cLPJP0bZdichX9HSe9hwEyHS1KSyFJI088nAsA424QPsa6kAyi31aaWF7L9rw1iOlvSv9ge63+ke8L2h1rHMEAXWyGuavvguvwxSS1a0g3yMeBYSW8GpqaIeDzlquljjWJ6PfBFYIGkhRXrlPheOc4NJ4ncQ5K+DnwVOA44wvY/NQhjaj4R1Th2bBDDIG/tWZ7fLIrFvRr4jKRfAm/rSI/1LupiK8T+Jtmr9D5v1Dwb21+RdB3wQUpzWlNmO/032yc0iukmSm/+hwFT01NcaPv/xr3t1IncQ5LmAXtSeqx+wXbLTk+drXtQmTIUKZXY8AAAHLZJREFU23/uQCwCXkMZU+gEem45NLo66qQOtkI8ZYbV9hjnDV/aSPow8Enb1w5Y91Hbbx/wtiWz7SSRmUn6APDfPZ15Hkhpo34R8Hvbb2kcX6eSiKR/oZy9Ts2U92fKSKefaxjTAym3GTaljA/Vm0Qm3oJsaWvFJml523e0jiOmJ+lPwI3Aa903Ady4fyOaT6q0FNipJ4FsAJwCfMz2S4AZW0mNi6THTz2ol/h9ZU1Iejdlms6n2X6g7QcCTweeVde1iOk1wJn18STbX7J92NSjRUzA43qW39Aohv/f3rlHW1ZWV/43eUghCloJMWowYgwSEYEBCIJGAtJqoi1BeRkwHWJHbaMCHbFBoyM+iA9sFIjYocFE2ndAgR6RQPMQcbQgyFsQCAhBpOWRbuUREJz9x7dP1b6Hc8++VdQ9a11r/caoUftB1V7cuvesveY3v7XmIOmi3vH4AKNLZhxOsercDPwB8NeSjpe0Qe/eohojak1kmHUlPYu2yekk4K22z+skkicGxfSJ3nGmXdgHAdvY/rcVwdg3S9oXuJKmIc+aXWnJ4ycBz56PjOV/f8b6uEW1uiDkx7avkfQi4GM0Q8kbbF+12A+uJDLMfwHOAx6medV36XYcH8giW+fmI2Pvng73E0jv4oNdl9EItkqWQCCni83zHE86nwlJ7dmp5cju5+8dkl5Fc5AdO/RnHi+VRAboOpmeCSsWaN9OG0JzOW3mQrGSH0naw/a5/YuSdqf1sCoaGV1sGWesp7Nnd4zLkRmSyJxq0fY3JO1I22uzqJb/Wlgv1hiStgJOBy5irk10V9ra0rUBMf2ENvlxItHurCwuNuWcsb4TbYNhKnv2tN51gTH9hu3b57m3s+3vLNqzK4ksPbKW+QCSltGG9KxoRw18fpLMNaN4bqXtgZhIlBSR0cWWkYz27N6LiYD9GHtJiX4xmTUlZy1Nspb5I0325Og4etyTSbOGFS62XWgutpu7a88BPiVpue0IA0LWGevLgR1pE/suI66tSJ+McmQYVYksQbKW+RmR9B3bO0fH0UfSDxhzsXXXNwSutL1FQEwrZqzT9kD1Z6x/MGJ3eGfPfhdtj89/m9TbK5pEcmSYOlGVyACdzv9bts/ozo9h5ULj8RE/XLYv7hLJW4BLJaUo85Pytml7Z4JaZ2R0sb0X2N6JZqyT054NPFaOlBQtR4apE5VEhvkIbTDOiFfQBr08kaa17xURFAnL/L71MRFHT7kXtacmo4st44z1jPbsrHJkWI+4krMGkHSp7R165yvkEcUNoElZ5mdxqmQnqYvtduZuWj2sf+6AGetZv58yypHd80NMCFWJDDNnzvSYvv5rM45lRNYy/4ljXVfnEKSrH0h7WTpl7PpBwKO2vzDrmGxf2zU77LvYLgTeHOViI+eM9cdsxOwTKNtmlCMhSJ2oJDLMHZJ2sn1x/6KknYE7gmJKWeYDz6S1ZJmURKKko7cDe0y4fhrtg3vmSQTyudhs/1V0DBN4kJWVWibSyZFj6sSfzlKdqCQyzLuBL0v6O2D0Jr09rR38flFBJeUm52vPvf4k54zt+yWtHxFQsWDS2bM73gGc3jWtfIwcGRRTmDpRSWQA25d0VcfbaJ55aANodrb9f4LCylrmZ2RDSRvZvr9/UdKTgScExVQsjIejA5hEUjkyTJ2oJLIAumQx767nALKW+YdHBzCBk4B/kPQWr2zp/2zgb7p7Myepiy0jGe3Zo2enkiMjKXfWAGrT1eb7Itn2JL19UUnsWkn3tYIVevERwJO6S/cBH7F9QlA86f79MnamVU02XDCRPeKqEhlm0uTCnWlv3VGL2ynLfHJ+rbD9GeAznYSF7Z9FxdKRzsVGws60zjvyICNh6kRVIquApJfRNhouAz5s+xtBcWzPlBkPkWX+iCxfq4xI+hmtnchEF1vEG3bSzrTp7Nnd89PJkZH/ZpVEFoCkV9DaQjxE+0CcVmbPIp60ZX62r1VGJF1ue7voOPpk7Ewr6WJgj3F3naSNgAttbz/rmLrnp0iyfSJ7xJWcNYCk7wKb0vzX/7u7tuIbKKh3VsoyP+PXqlgwGTvTZrVnZ5Qjw0wIVYkMIOkCpi8WR0gPWcv8C8j3tTrc9se6431sf7V37yjbRwbEtKftc2b93IWSqDPtdcAO89izv2t7y6C4MsqRYepEJZElSNYyPyPTtP4oWSKxiy3VoCxJf0HrNjDJnn2B7Y8HxZVOjoyk5KwBtHLW9ERsnzarWHqkLPMzvvUz921x/M1xohwxA9K52DJ2prV9dNdi/cJRdUSwPTsrkepEVSIDaPrsads+eGbBdCQu8zO+9aeLqU8WF1vWzrS9OLLYs1PKkZHqRFUiA9j+k+gYJpBuF3ZHxrf+bST9tHv+ht3xKJ5lQTFldLF5UssOx3emHcURnjx6HCnpiHnuRcmRYepEJZEBJL0GuKr3Yf0+4HXArcA7bd8y65gSl/me53jS+UywvW7Ec6eR1MWWrjNtYtLJkQT2iCs5awBJV9GaLT4g6dW0QT0HANsB+9h+RXB8mcr8R2kzugVsCDwwugUss52ma66kpwBvs/3hgGdfQD4XW7pBWUuBRHJkmAmhKpFhbHv0Ybg3cJLty2gzjf9TYFxAjuQxIulb/2a0H/JnAF8Hvgh8AHgjcbNEdot47jScsDNtUqPG6Pmp5MhIdaIqkQG6SmQX2lv1LcDrbF/a3fu+7edHxpcJScun3bd976xiGdHZab9Jk41e2f26AjjU9p2zjqeLKe2HYyaymiImyZF9ojfVzlqdqCQygKSDgSOBnwI/sf3K7vp2wNFRnv6MdAuwtwOPjC71btv2cwJiutL2Nr3z24Fn2Q5bLM764ZiN/n6M8b0ZkXs1MsqRkZScNYDtkyX9E22e+pW9W3cCIc6txG+yxwK/B3ybJhtd5ARvKZKeysqEdg+wiSRBTHUEKV1sGUln1ICccmQk60QHkJ3ONfM02g/3tpK2k7SZ7R/bvi0orP17x+NWw1fOMpA+tg8BtgW+ChwEXC7pY5I2j4oJ2IS2UDz6tTFtzPFlxPWISvfhqDb+ORvbSPpp12bkhd3x6HzrqKAkHd473mfs3lGzjyiWkrMGmKcnzXKabe4A21fMOKS0ZX6fzv20P/BB4EjbJwaHlIaMLraS0RZORjkyUp0oOWsAz9MxV9IONPnmd2cbEZDwTRZW7I59La2V+KbAacD2gRXbKK4nAH/EStfRtcAXbD8UEU9GFxs5O9NOJNKePQphnuNJ57Nif+Bj3fERNDVgxCtp67qLQiWR1cT2pT0r3axJuQubttHqRtosihtpCW2HLuGG9BmT9HzgDNo6zWj/w27AeySF7H/I6GIDngl8gskfggYi9q6ks2d3ZHyJC0tslURWE0lPo3Zhj/OV7vfndb/6mFaZzJrjgLeO9zqS9HLgeJoRYNbczRQXGzBzFxtwU0JX0edo9uxTaW/Tl9Ls2VtH2bM7Mr7EhSW2WhMZQNJxPPYfYTlt78g7bZ85+6gmE13mS9o7otqYhqTrPU9DSknX2f6dgJg+STIXW5a1tD4Z7dlZiVxnq0pkmHEHj2k20cNsR7Xtzlrmv5eYamMa60jaYHz9Q9Iygr7/bR/SWYx3o7nYjpN0NnBCRC+2jsOH/5PZk9CenVKOjFQnqhJZIN2HznO705uiWkF0saTbhd3Flc7hozYnY2dahdbvKXQscKntD8RFl8fFpoSDsiT9EPgF86zTRGxehZybaudjFupEJZEBJK0HHAUcTOvcK2Az4LPAe2z/PCCmlGW+pAeAmybdov1wvXDGIbWHS39Oe9N+YhfLfbRuA8cFxTPJxfaVSBebpEnzJlZ0prW944xDSktSOXKqOmH7nYv27Eoi05F0DPBk2lv+z7prGwNHAw8u5j/OlJiupEkhozeg8/vngWX+tcDvz3d/VAlEMeueQlPiuJ/HuthWEL2upCSdabtYUtmzR/TkyAOAFwGhcmSkOlFJZABJNwJbjL9pSFoXuN72bwfE9ENylvkZF2cPm3bf9n+dVSwjlHBaJpCuM+089uztSdSePpEcGaZO1ML6MJ5Uqtp+VFKUxffZEc9dAN+edFHSFsC7bP/HGccDrWK8AvgG7cMxQ2+qM6OrjXEmdaZV/KCsjPbszJtqQ0wIVYkMIOnrwGm2Pzd2/UBgX9v/PiiudGW+pG1oH0IjXfZvaD/sOwGfsH1MUEwH0Mr7y2ha8bmRGnZSA8IFJOtMm9Ge3T07nRwZqU5UEhlA0jNpbxoPMnfi24bAH9r+UUBMKct8SRcDJ7BSlz0S+HvgfZFuthGSdqEllJcD77Z9RlAc6ZJIRiTdQNtYOMmefXWElNw9P6UcGUUlkQWiNmt69Nb/fY/Nop5xLOfSJpZNKvPfM1+/rxnEdYXtbXvnN2exO0raFNgX2Af4OfCXtr8TFEs6F1tkA78pMaW0Z2fcVAtx6kQlkQEybixKXOZfT3vTH5XUn6eNWx3psjPX1dWGiu1Lcxr9A81KG7JJtBdTOhebEnam7Z6dyp7dxZSukoxUJyqJDCDpFprmKeDpwB2jW8RN68ta5k9z80Tp6r8ArqHt8YHH6tczX9NK6mJLPV4giz27iyVjEglTJ8qdNYDtFQOVMvwwdXwOOFXSpDL/lKigpn2jSpr5jIyOEGlvgIwutnSdaSfZszuzERBjz+7YUtJVE65Hbqp95ngCoQXzv9T6/y0alURWjRRlm+0PdWX+tySlKfPH6eyFu9MkrVfTJkTOFNvfnPUzF8CJXa+siS62oJgydqbNaM8GuAV4TXQQY4T1iKskskSxfTxwfKYyf4SknWmJYy9ax+O3AX8RFMvVTEn+QW+Nf8tcF9sVNBfbH0W52JxzvMB2tDW2PyCJPbvj4ejuCxMIUydqTWSAsZL6MGBOCR204zndLmxoLh6a++k22g/812gumrAZ65J+c9r9oEXsdC62jAaSPlns2V0sx9v+8wnXI+XIMBNCVSLDPLl3fOLYeRRZy/w3ATfQ3rLPtP1Q1K7+Hifa/nfBMYyzTHNH0T7UPw/aHZ5xUFYLpNmztwO2psUY6q4jpxwZpk5UJbIEybgLu4trXWDPLrY9aI0hXw5sZvuRaX92EWPKYoZYQVIXW8bOtOns2ZBzU22kOlFJZImTqczvI2kD2mL6AcBLaUnuDQFx3MyU9Zhsm8Ykre+A8QLds7N1pk1nz4a0cuQvmKJO2P6rxXp2yVlLmGxlfucEeQtteNdVwMm2T1Vrnb9XUFib0JLZxJ5CJJjEmMHFBq0EAs6XdDkrO9PeSJNxI8hoz4accmSYCaEqkSVI4jL/y7SWIt8CXgX80PYhwTHNuzFM0k62L551TL3nT3KxnWH7XwNiSTcoKysZ5cg+s1YnKokMIOnvbP+H7viPbf99cEiZy/yrbW/dHa8HXBK9s3famoik22w/KyCmjC62jJ1pM9qzpxIpR3bPn3mPuJKzhtmmd/xO2gJaNFnL/BU/PLYf6e8uDuSgKfeiAszoYvtK9/vzul99omS/Vwc8c5XJIEdOUCf2nZU6UZXIANMa0xVzkfQocP/olNYu/wFWtoPYOCq2SQRWIhldbOk600o6O6E9ewXJ5MgwdaKSyACSfkIr8UXTi7/Uv2/7HQExLbkyPwpJZzL5ayVgd9sbzTikuUHkcbGle0HKaM+GtHLky6bdX8z2PyVnDfOu3vGlYVHMJWWZL2l32+d1x5v3raGBb7pHr+a9RSOpiy0jm0jae76bgZVTOjkyskdcVSKrgKQnAdi+LziOlGX+NOkv25uupM2A/W1/PODZGV1sGQdl3QOczjz2bAdNEEwqR4apE1WJLABJbwWOADbqzu8DPmr700EhbRr03CE0z/Gk85nTOVf2of3wP4MmQ0Tw/J6L7STgkqA4+mTsTHvrfIlC0k6zDmaE7UeBs4CzenLkhsCPJIXIkQSqE5VEBlAb0bkLsJvtm7trzwE+JWm57Q8FhJW1zM84k+LJwN60BdAtaC6jzW3/RkQ8HRldbBk70077wnwVmLkpAtLKkWE94krOGkDSD4BtxnviSNoQuNL2FgExZS3z/y9wIS2ul3bHdOcvsf3UgJgepL3pv5euH1R0m4qMLraMnWklvcD2NfPc+xfbm806pu7ZGeXIMBNCVSLDeFJTNdsPdra6CFKW+bQdzyPGF61DFrFpMuT+wKeBL3YfAKE45+yOdJ1p50sgo9szC+SxZJQjw9SJSiLD/EjSHrbP7V+UtDvw46CYUpb5fYdIt/6A7bsiYhlh+5PAJzsJcn/aB+QzJL0b+JrtG2YdU1IXW7pBWQP27F+ZcTh9MsqRYT3iSs4aQNJWNOnoIlpjM4AdgF2B19q+NiCmrGW+gPcBbwfWoX1DPwIcZ/sDETFNQtILaGsk+9p+bsDz07nYknamDdv7MI2kcmRYj7iqRAawfW3vQ2er7vKFwJuj3tASl/mHAi8Bdhy9XXcVwAmSDrV9TGBsfe4E3mP7yKDnZ3SxpetMO1+SGNmzgZAkklSODFMnKoksgC5ZnBwdx4jEZf5BwJ627x5dsH2zpANpsylmnkS61hQfAe6ltTY/BfhVYB1Jb7R91qxjIqGLjSbN9gcX3dk7N603VBiJ7NlZ5ciwHnElZy1BEpf519h+wareW+SYLqVNntuEpvu/yvZ3JG0JfDHC0ZLRxTaNqM6089iz9wu2Z6eUI6ex2D3iqhJZgmQt84GHV/PeYrKe7bMBJH3AXVts29cHLohmdLHNIUNnWtqQtXF79h8GxDFOOjkyUp2oJDKAevNEMpKpzAe2kfTTCddFa1EdQd+G/eDYvZAyPKOLbcQ8nWnnHS+8yKSzZ3dklCPDesSVnDVA0vI0ZZmfkZ6Tpu+ioTtfZnv9gJjSudgydqYd0bNnHwD8NvB+guzZXTxLRo6cRY+4SiIDSLqe9s07sUyNcK1k3IVdLBxJh9F2Ov/ZuIsNOCvCxaY28uAG4JOs7Eyb7nsq2p7dxZByTXLEJHXC9qJVk5VEBpD0M+C7zN9iZOauFUmH0N7MNqK9NX4ZOCfbD3wxGUmXM+Zi665vCpwdtNifrjPtJCT9KnCPk3xwZZEjI9WJSiIDRPakGSJbmV8sjIwutrEYsgzKmteeDUTZs7PKkWHqxDqL/YBi8bB9s+2juj4+O9BsrP8YHFYxTDoXm6Rlkg6RdDzwx8Dptl9PezkJ+bCm9e46ilZtnwe8yfavA78L/HVQTDB3U+3ybg1kJ2BXSYcGxXQEsAHNhHCEpN+a1YOrEhlA0p62z4mOY4hsZX4xP2NtM+bcIm6xP2Nn2hWtWCRdZ/t3evfCFIKMcmQvhpmrE5VEBpB0PvPb9mx7j1nGA3nL/GLpIulqr+xMux5wSbQrMeumvuxy5IhZmRBqn8gwk1wNOwOH0zZDRXA8K3dhn8fYLmzi5Idi6ZKxM+1o35GADXt7kCL3HUFCOXIeZtIjriqRVaCz9v0l7Rv4w7a/ERRHyjK/WLpk7EyblaRyZJg6UZXIApD0Cprr4SFa8jg/OKR0u7CLpU3SzrQpSfq1ClMnqhIZQNJ3gU2Bj9MG9swhaLNhul3YxdImaWfaYoFEqhOVRAaQdAHTF9ZDW2QXxZog6yJ2sTAi//1KzhrA9m7RMRTFDEjXmbZYJcJMCLXZcABJh/eO9xm7d9TsIyqKRSFjZ9pigdhe1/bGtp9se73ueHS+qPJ2yVkDVJlfrA0spc60RS5KzhqmyvxibSD9oKwiJ5VEhqkyv/ilJ/OgrCI3JWcNUHbaYm0gY2faYmlQC+sDRC5YFcUMydiZtlgCVCUygKTl0+7bvndWsRTFYpG5M22Rm1oTGeZu4HZaaQ9zF9MN1DTB4peB9ccTCLR1EUlVcRfzUklkmGOB3wO+TetBc1HN7Ch+CVkqnWmLZJSctQC6RcfdaINeXgScDZzQ7y9UFEuZjJ1pi6VBJZFVQNJTaFPDPggcafvE4JCKoihCKTlrAEkb0TZi7Ufr5nsasL3t20IDK4qiSEBVIgNIuh+4EfhS9/ucL1i1yC6KYm2mksgAkj475bZtHzyzYIqiKJJRctYwZ1a1URRFMZmqRAaoTr1FURTzU21PiqIoitWmKpEBJD0A3DTpFm1N5IUzDqkoiiINtSYyzC3Aa6KDKIqiyEglkWEetn1rdBBFURQZqTWRYb496aKkLSTVjvWiKNZqKokMc6KksyVdI+lDkp4u6VTgPOD70cEVRVFEUklkmL8FvgC8DrgLuAL4Z+C5to+JDKwoiiKacmcNIOkK29v2zm+2XTNEiqIoqIX1hbBM0nasHEb1UP/c9vfCIiuKogimKpEBJJ0/5bZt7z6zYIqiKJJRSeRxIGl92z+PjqMoiiKKWlhfRdTYQ9JJtNnrRVEUay2VRBaIpJ0lHQvcCpwOXAhsGRtVURRFLCVnDSDpKGAf4Dbgi8DXgEttbx4aWFEURQLKnTXMm4AbgBNos0UeklSZtyiKgpKzFsLTgQ/RmjD+s6RTgA0lVQIuimKtp+SsVUDSBsCrgQOAlwLn2n5DbFRFURRx1Nv0AJKWAW8BngtcBZxs+1RJGwN7hQZXFEURTFUiA0j6MvBz4FvAq4Af2j4kNqqiKIocVBIZQNLVtrfujtcDLqmZ60VRFI1aWB9mxY50249EBlIURZGNqkQGkPQocP/oFNgQeICVM9Y3joqtKIoimkoiRVEUxWpTctYAknbvHW8+dm/v2UdUFEWRh6pEBpD0vdFCev940nlRFMXaRlUiw2ie40nnRVEUaxWVRIbxPMeTzouiKNYqasf6MM+RdAat6hgd051XJ9+iKNZqak1kAEkvm3bf9jdnFUtRFEU2KomsApI2BbB9V3QsRVEUGag1kQG6cbjvl3Q38APgBkl3SXpfdGxFURTRVBIZ5lDgJcCOtpfbfiqwE7CrpENjQyuKooil5KwBJF0O7Gn77rHrmwJn294uJrKiKIp4qhIZZv3xBAIr1kXWD4inKIoiDZVEhnl4Ne8VRVH80lNy1gBjXXzn3AKW2a5qpCiKtZZKIkVRFMVqU3JWURRFsdpUEimKoihWm0oiRVEUxWpTSaQo1hCS9pJkSVtGx1IUs6KSSFGsOQ4ALup+L4q1gkoiRbEGkPQkWnucPwX2766tI+nTkq6XdI6kf5T0+u7e9pK+KekySf8k6end9QskfVTSJZJukPTS7vq6ko6WdI2kqyS9XdLukr7ei2FPSV+b+f98sVZT80SKYs3wWuAs2zdIukfS9rR5M88Gng/8GnAdcLKk9YHjgNfavkvSfsCHgYO7v2s92y+S9PvA+4GXA3/W/V3b2n5E0nLgX4FPS9q066DwJ8DJM/r/LQqgkkhRrCkOAD7VHX+pO18P+KrtXwB3Sjq/u/884AXAOZIA1gV+3Pu7Tut+v4yWOKAlks/YfgTA9r0Akk4BDpT0WeDFwBvX+P9ZUUyhkkhRPE66qmB3YGtJpiUFA/NJSwKutf3iee4/1P3+KMM/o58FzgT+jZawHlmV2Ivi8VJrIkXx+Hk9cIrt37T9bNubAbcA9wKv69ZGngbs1v33PwA2lfRiAEnrS9pq4BnnAG+WtF73Z5YD2L4DuAN4Ly2hFMVMqSRSFI+fA3hs1XEq8OvA7cD3gf8BfA/4f7YfpiWej0q6ErgC2GXgGf8duA24qvszb+jd+zzwL7ave7z/I0WxqlTvrKJYRCQ9yfZ9kn4FuATY1fada/gZxwOX2z5pTf69RbEQak2kKBaX/ynpKcATgA8uQgK5jNZl+j+vyb+3KBZKVSJFURTFalNrIkVRFMVqU0mkKIqiWG0qiRRFURSrTSWRoiiKYrWpJFIURVGsNpVEiqIoitXm/wMS8fhu+q1BhgAAAABJRU5ErkJggg==\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This plot shows the information of distribution of agency.From the figure we can observe that the department of housing and community development type  has the highest number of records when compared to the other type."
      ],
      "metadata": {
        "id": "lRkBCGvF5bI8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['CitationStatus'].value_counts().plot(kind='bar',xlabel='CitationStatus',ylabel='Count',title='Distribition of citation status')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 333
        },
        "id": "WotRoPxIRCaM",
        "outputId": "53adcf7f-2186-46fe-cc82-c50ad87a00ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fcdd1a3f310>"
            ]
          },
          "metadata": {},
          "execution_count": 25
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This plot shows the information of distribution of citationstatus.From the figure we can observe that the type occured has the highest number of records when compared to the other type."
      ],
      "metadata": {
        "id": "r3YcJWU-5ydH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['ViolationCodeArticle'].value_counts().plot(kind='bar',xlabel='ViolationCodeArticle',ylabel='Count',title='Distribition of ViolationCodeArticle')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "id": "hAufq8kWR55-",
        "outputId": "cff3dc85-b902-4949-c7c2-27c8cc24aad0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fcdd19a0e10>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This plot shows the information of distribution of violationcode article.From the figure we can observe that the type PM has the highest number of records when compared to the other type."
      ],
      "metadata": {
        "id": "6VuKctBh7_v_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['OfficerPresenceRequested'].value_counts().plot(kind='bar',xlabel='OfficerPresenceRequested',ylabel='Count',title='Distribition of OfficerPresenceRequested')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "CJ2NAuQrSLnl",
        "outputId": "e99b43eb-4331-4888-d984-5874000b5000"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fcdd1889350>"
            ]
          },
          "metadata": {},
          "execution_count": 27
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This plot shows the information of distribution of officer presence requested.From the figure we can observe that the type yes has the highest number of records when compared to the other type."
      ],
      "metadata": {
        "id": "TUiWSAFE8Pkl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['HearingStatus'].value_counts().plot(kind='bar',xlabel='Hearingstatus',ylabel='Count',title='Distribition of Hearingstatus')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 318
        },
        "id": "aN2RSSUDSgIj",
        "outputId": "e478a3bc-c3e0-4e0e-d50c-bc30b46fd2c0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fcdd17f7250>"
            ]
          },
          "metadata": {},
          "execution_count": 28
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This plot shows the information of distribution of hearing status.From the figure we can observe that the type GR has the highest number of records when compared to the other type."
      ],
      "metadata": {
        "id": "9UX-jJ6A87Kt"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        ""
      ],
      "metadata": {
        "id": "kcaaKkGxSQLJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['PoliceDistrict'].value_counts().plot(kind='bar',xlabel='PoliceDistrict',ylabel='Count',title='Distribition of PoliceDistrict')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 372
        },
        "id": "VcMEDQ13S5du",
        "outputId": "717f2cff-2020-4bd4-b628-282d8a31e606"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fcdd1765850>"
            ]
          },
          "metadata": {},
          "execution_count": 29
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This plot shows the information of distribution of police district.From the figure we can observe that the eastern police district has the highest number of records when compared to the other type.\n",
        "\n"
      ],
      "metadata": {
        "id": "t-an4ucl-cTQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(12,5))\n",
        "(sns.distplot(data['FineAmount'],bins=50,kde=True,color = \"green\"))\n",
        "plt.xlabel('FineAmount')\n",
        "plt.ylabel('Distribution')\n",
        "plt.title('Distribution of Fine Amount')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "1pR8FpncSI-p",
        "outputId": "7c0274a1-83c4-4bd7-971d-4e869d8c2e43"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
            "  warnings.warn(msg, FutureWarning)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        ""
      ],
      "metadata": {
        "id": "dQJc0MYgBzNg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "This distplot shows the information of distribution of fine amount.it can be observed that most people paid a fine amount in between 0 to 1000.the highest fine amount would be 800."
      ],
      "metadata": {
        "id": "xG7-OvopBMla"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "f,ax=plt.subplots(figsize=(20,10))\n",
        "data['CitationStatus'].value_counts().plot(kind='pie')\n",
        "plt.title(\"Pie Plot of CitationStatus\", fontsize = 20)\n",
        "plt.show();"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 596
        },
        "id": "cICeBhF0Tsb4",
        "outputId": "f342904a-690e-4675-832f-c288ca66fbaf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The above pie plot is for citation status it can be observed that the citation status is occured for almost all the citations.Here \n",
        "o stands for-occured\n",
        "p-passed\n",
        "v-violated\n",
        "a-abscond"
      ],
      "metadata": {
        "id": "pTT0-4ywC90d"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "f,ax=plt.subplots(figsize=(12,7))\n",
        "sns.boxplot(x=data['CitationStatus'],y=data['FineAmount'],hue=data['CitationStatus'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 460
        },
        "id": "R7WkoZegXESv",
        "outputId": "7145e8d8-aa95-4263-c672-90d9927d449f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fcdcc2f5e10>"
            ]
          },
          "metadata": {},
          "execution_count": 43
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "it is observed from the box plot that when ever the citation status is occured \n",
        "there were fines collected from $0  to  $1000"
      ],
      "metadata": {
        "id": "HkrEyMunIB5h"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.rcParams['figure.figsize'] = (20,9)\n",
        "x = pd.crosstab(data['HearingStatus'],data['CitationStatus'])\n",
        "x.div(x.sum(1).astype(float),axis = 0).plot(kind = 'bar',stacked = False)\n",
        "plt.title('CitationStatus vs HearingStatus',fontweight = 30,fontsize = 20)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 377
        },
        "id": "BSz5dpaDXsHM",
        "outputId": "ed8cae00-b376-4848-8fe2-0f40d1156eaa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The Citations with O (Occured) Category has more data points in DB, DF, DI, GR, GU, HR, LE, RE Hearing status. The other citation status has less in number when compared to the O category type. "
      ],
      "metadata": {
        "id": "dUAv_8CQJFI-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        ""
      ],
      "metadata": {
        "id": "227CwYuX8vwI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "_w76AbwsYK3o"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
